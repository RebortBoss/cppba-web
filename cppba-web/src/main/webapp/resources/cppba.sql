-- MySQL dump 10.13  Distrib 5.6.32, for Linux (x86_64)
--
-- Host: localhost    Database: cppba
-- ------------------------------------------------------
-- Server version	5.6.32

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `article_class`
--

DROP TABLE IF EXISTS `article_class`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `article_class` (
  `article_class_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `add_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `delete_status` int(11) DEFAULT '0',
  `user_id` bigint(20) DEFAULT NULL COMMENT '用户编号',
  `name` varchar(16) DEFAULT NULL COMMENT '分类名',
  `sort_id` int(11) DEFAULT '0' COMMENT '编号',
  PRIMARY KEY (`article_class_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article_class`
--

LOCK TABLES `article_class` WRITE;
/*!40000 ALTER TABLE `article_class` DISABLE KEYS */;
INSERT INTO `article_class` VALUES (1,'2016-07-14 06:48:23',0,1,'spring',0),(5,'2016-07-14 08:14:16',0,1,'centos',1),(7,'2016-07-21 12:56:51',0,1,'java善假于物',3),(8,'2016-07-28 08:56:52',0,1,'redis',2),(9,'2016-08-03 02:29:33',0,1,'jackson',4);
/*!40000 ALTER TABLE `article_class` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `articles`
--

DROP TABLE IF EXISTS `articles`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `articles` (
  `article_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `add_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `delete_status` int(11) DEFAULT '0',
  `user_id` bigint(20) DEFAULT NULL COMMENT '用户编号',
  `article_class_id` bigint(20) DEFAULT NULL COMMENT '文章分类编号',
  `title` varchar(128) DEFAULT NULL COMMENT '标题',
  `abstracts` text COMMENT '简介(显示在列表中)',
  `content` text COMMENT '内容',
  `html` text COMMENT 'markdown对应的html文件',
  PRIMARY KEY (`article_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `articles`
--

LOCK TABLES `articles` WRITE;
/*!40000 ALTER TABLE `articles` DISABLE KEYS */;
INSERT INTO `articles` VALUES (1,'2016-07-14 06:48:28',0,1,1,'spring-boot使用教程(一)：让程序跑起来','spring-boot是由[Pivotal](http://gopivotal.com/)团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Boot致力于在蓬勃发展的快速应用开发领域（rapid application development）成为领导者。','## 简介\nspring-boot是由[Pivotal](http://gopivotal.com/)团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Boot致力于在蓬勃发展的快速应用开发领域（rapid application development）成为领导者。\n\n##文件结构\n\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/672c18ed-cb3c-477f-8cb0-d4ef387a7082.png)\n\n## 1.maven的pom.xml配置\n````maven\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.cppbba</groupId>\n    <artifactId>cppba-spring-boot</artifactId>\n    <packaging>war</packaging>\n    <version>1.0.0</version>\n\n    <name>cppba-spring-boot Maven Webapp</name>\n    <url>http://maven.apache.org</url>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>1.3.6.RELEASE</version>\n    </parent>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <jdk.version>1.7</jdk.version>\n        <spring.version>4.3.0.RELEASE</spring.version>\n        <hibernate.version>4.3.11.Final</hibernate.version>\n    </properties>\n\n    <dependencies>\n        <!--spring-->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-jdbc</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-orm</artifactId>\n        </dependency>\n        <!--mysql-->\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n        </dependency>\n        <!-- hibernate-->\n        <dependency>\n            <groupId>org.hibernate</groupId>\n            <artifactId>hibernate-entitymanager</artifactId>\n            <version>${hibernate.version}</version>\n        </dependency>\n        <!--druid-->\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>druid</artifactId>\n            <version>1.0.20</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <finalName>cppba-spring-boot</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n````\n## 2.创建Application.java\n````java\npackage com.cppba;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.core.env.Environment;\n\nimport java.net.UnknownHostException;\n\n// same as @Configuration @EnableAutoConfiguration @ComponentScan\n@SpringBootApplication\npublic class Application {\n    public static void main(String[] args) throws UnknownHostException {\n        SpringApplication app = new SpringApplication(Application.class);\n        Environment environment = app.run(args).getEnvironment();\n    }\n}\n````\n\n##3.创建DatabaseConfiguration.java\n````java\npackage com.cppba.config;\n\nimport com.alibaba.druid.pool.DruidDataSource;\nimport org.springframework.boot.bind.RelaxedPropertyResolver;\nimport org.springframework.context.ApplicationContextException;\nimport org.springframework.context.EnvironmentAware;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.env.Environment;\nimport org.springframework.orm.hibernate4.HibernateTransactionManager;\nimport org.springframework.orm.hibernate4.LocalSessionFactoryBean;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\nimport org.springframework.util.StringUtils;\n\nimport javax.sql.DataSource;\nimport java.sql.SQLException;\nimport java.util.Arrays;\nimport java.util.Properties;\n\n@Configuration\n@EnableTransactionManagement\npublic class DatabaseConfiguration implements EnvironmentAware {\n\n    private Environment environment;\n    private RelaxedPropertyResolver datasourcePropertyResolver;\n\n    //从application.yml中读取资源\n    @Override\n    public void setEnvironment(Environment environment) {\n        this.environment = environment;\n        this.datasourcePropertyResolver = new RelaxedPropertyResolver(environment,\n                \"spring.datasource.\");\n    }\n\n    //datasource\n    @Bean(initMethod = \"init\", destroyMethod = \"close\")\n    public DataSource dataSource() throws SQLException {\n        if (StringUtils.isEmpty(datasourcePropertyResolver.getProperty(\"url\"))) {\n            System.out.println(\"Your database connection pool configuration is incorrect!\" +\n                    \" Please check your Spring profile, current profiles are:\"+\n            Arrays.toString(environment.getActiveProfiles()));\n            throw new ApplicationContextException(\n                    \"Database connection pool is not configured correctly\");\n        }\n        DruidDataSource druidDataSource = new DruidDataSource();\n        druidDataSource.setUrl(datasourcePropertyResolver.getProperty(\"url\"));\n        druidDataSource.setUsername(datasourcePropertyResolver\n                .getProperty(\"username\"));\n        druidDataSource.setPassword(datasourcePropertyResolver\n                .getProperty(\"password\"));\n        druidDataSource.setInitialSize(1);\n        druidDataSource.setMinIdle(1);\n        druidDataSource.setMaxActive(20);\n        druidDataSource.setMaxWait(60000);\n        druidDataSource.setTimeBetweenEvictionRunsMillis(60000);\n        druidDataSource.setMinEvictableIdleTimeMillis(300000);\n        druidDataSource.setValidationQuery(\"SELECT　\'x\'\");\n        druidDataSource.setTestWhileIdle(true);\n        druidDataSource.setTestOnBorrow(false);\n        druidDataSource.setTestOnReturn(false);\n        return druidDataSource;\n    }\n\n    //sessionFactory\n    @Bean\n    public LocalSessionFactoryBean sessionFactory() throws SQLException{\n        LocalSessionFactoryBean localSessionFactoryBean = new LocalSessionFactoryBean();\n        localSessionFactoryBean.setDataSource(this.dataSource());\n        Properties properties1 = new Properties();\n        properties1.setProperty(\"hibernate.dialect\",\"org.hibernate.dialect.MySQL5Dialect\");\n        properties1.setProperty(\"hibernate.show_sql\",\"false\");\n        localSessionFactoryBean.setHibernateProperties(properties1);\n        localSessionFactoryBean.setPackagesToScan(\"*\");\n        return localSessionFactoryBean;\n    }\n\n    //txManager事务开启\n    @Bean\n    public HibernateTransactionManager txManager() throws SQLException {\n        HibernateTransactionManager hibernateTransactionManager = new HibernateTransactionManager();\n        hibernateTransactionManager.setSessionFactory(sessionFactory().getObject());\n        return hibernateTransactionManager;\n    }\n}\n````\n\n##4.创建CommonAction.java(这是一个测试类)\n````java\npackage com.cppba.web;\n\nimport org.hibernate.SQLQuery;\nimport org.hibernate.Session;\nimport org.hibernate.SessionFactory;\nimport org.springframework.transaction.annotation.Transactional;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport javax.annotation.Resource;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.util.List;\n\n@RestController\n@Transactional\npublic class CommonAction {\n\n    @Resource\n    private SessionFactory sessionFactory;\n\n    @RequestMapping(\"test\")\n    public void test(HttpServletResponse response){\n        Session session = sessionFactory.getCurrentSession();\n        SQLQuery sqlQuery = session.createSQLQuery(\"select * from user\");\n        List list = sqlQuery.list();\n        System.out.printf(list.size()+\"\");\n        try {\n            response.setContentType(\"application/json\");\n            response.setHeader(\"Cache-Control\", \"no-cache\");\n            response.setCharacterEncoding(\"UTF-8\");\n            response.getWriter().write(\"{\\\"msg\\\":\\\"调用成功\\\"}\");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n````\n\n##5.创建application.yml\n````json\nserver:\n    port: 8080\n    address: localhost\n\nspring:\n    datasource:\n        url: jdbc:mysql://localhost:3306/cppba\n        username: root\n        password: root\n````\n\n##6.启动项目\n我们点击启动按钮\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/60bfbf98-bc9b-4621-a5e2-41e7a6772658.png)\n\n控制台会打印如下内容：\n\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/baa0e47e-9ff6-43ea-839f-5f59de22b6cd.png)\n\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/734ab22a-cc2b-4a5e-acaa-e6e79792f5ca.png)\n\n启动成功\n接下来我们访问http://127.0.0.1:8080/test\n(我的CommonAction中RequestMapping(\"test\"),所以访问路径是test)\n\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/77eb1320-647c-4086-ab00-ea68bfed7eb0.png)\n\n到此spring-boot配置成功！\n\n>参考项目：https://github.com/bigbeef/cppba-spring-boot\n> github地址：https://github.com/bigbeef\n> 个人博客：http://www.cppba.com','<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><h2 id=\"h2-u7B80u4ECB\"><a name=\"简介\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>简介</h2><p>spring-boot是由<a href=\"http://gopivotal.com/\">Pivotal</a>团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Boot致力于在蓬勃发展的快速应用开发领域（rapid application development）成为领导者。</p>\n<h2 id=\"h2-u6587u4EF6u7ED3u6784\"><a name=\"文件结构\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>文件结构</h2><p><img src=\"http://image.cppba.com/Image/article/672c18ed-cb3c-477f-8cb0-d4ef387a7082.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<h2 id=\"h2-1-maven-pom-xml-\"><a name=\"1.maven的pom.xml配置\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.maven的pom.xml配置</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-maven\"><span class=\"tag\">&lt;project</span><span class=\"pln\"> </span><span class=\"atn\">xmlns</span><span class=\"pun\">=</span><span class=\"atv\">\"http://maven.apache.org/POM/4.0.0\"</span><span class=\"pln\"> </span><span class=\"atn\">xmlns:xsi</span><span class=\"pun\">=</span><span class=\"atv\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></code></li><li class=\"L1\"><code class=\"lang-maven\"><span class=\"pln\">         </span><span class=\"atn\">xsi:schemaLocation</span><span class=\"pun\">=</span><span class=\"atv\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"</span><span class=\"tag\">&gt;</span></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;modelVersion&gt;</span><span class=\"pln\">4.0.0</span><span class=\"tag\">&lt;/modelVersion&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"></code></li><li class=\"L4\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">com.cppbba</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">cppba-spring-boot</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;packaging&gt;</span><span class=\"pln\">war</span><span class=\"tag\">&lt;/packaging&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;version&gt;</span><span class=\"pln\">1.0.0</span><span class=\"tag\">&lt;/version&gt;</span></code></li><li class=\"L8\"><code class=\"lang-maven\"></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;name&gt;</span><span class=\"pln\">cppba-spring-boot Maven Webapp</span><span class=\"tag\">&lt;/name&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;url&gt;</span><span class=\"pln\">http://maven.apache.org</span><span class=\"tag\">&lt;/url&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;parent&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.springframework.boot</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L4\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">spring-boot-starter-parent</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;version&gt;</span><span class=\"pln\">1.3.6.RELEASE</span><span class=\"tag\">&lt;/version&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;/parent&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"></code></li><li class=\"L8\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;properties&gt;</span></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;project.build.sourceEncoding&gt;</span><span class=\"pln\">UTF-8</span><span class=\"tag\">&lt;/project.build.sourceEncoding&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;jdk.version&gt;</span><span class=\"pln\">1.7</span><span class=\"tag\">&lt;/jdk.version&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;spring.version&gt;</span><span class=\"pln\">4.3.0.RELEASE</span><span class=\"tag\">&lt;/spring.version&gt;</span></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;hibernate.version&gt;</span><span class=\"pln\">4.3.11.Final</span><span class=\"tag\">&lt;/hibernate.version&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;/properties&gt;</span></code></li><li class=\"L4\"><code class=\"lang-maven\"></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;dependencies&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"com\">&lt;!--spring--&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L8\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.springframework.boot</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">spring-boot-starter-web</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.springframework.boot</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">spring-boot-starter-test</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L4\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.springframework.boot</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">spring-boot-starter-jdbc</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L8\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.springframework</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">spring-orm</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"com\">&lt;!--mysql--&gt;</span></code></li><li class=\"L4\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">mysql</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">mysql-connector-java</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L8\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"com\">&lt;!-- hibernate--&gt;</span></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.hibernate</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">hibernate-entitymanager</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;version&gt;</span><span class=\"pln\">${hibernate.version}</span><span class=\"tag\">&lt;/version&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L4\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"com\">&lt;!--druid--&gt;</span></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">com.alibaba</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">druid</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L8\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;version&gt;</span><span class=\"pln\">1.0.20</span><span class=\"tag\">&lt;/version&gt;</span></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;/dependencies&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;build&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;finalName&gt;</span><span class=\"pln\">cppba-spring-boot</span><span class=\"tag\">&lt;/finalName&gt;</span></code></li><li class=\"L4\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;plugins&gt;</span></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;plugin&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">                </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.springframework.boot</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"><span class=\"pln\">                </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">spring-boot-maven-plugin</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L8\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;/plugin&gt;</span></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/plugins&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;/build&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"><span class=\"tag\">&lt;/project&gt;</span></code></li></ol></pre>\n<h2 id=\"h2-2-application-java\"><a name=\"2.创建Application.java\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.创建Application.java</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">boot</span><span class=\"pun\">.</span><span class=\"typ\">SpringApplication</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">boot</span><span class=\"pun\">.</span><span class=\"pln\">autoconfigure</span><span class=\"pun\">.</span><span class=\"typ\">SpringBootApplication</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">core</span><span class=\"pun\">.</span><span class=\"pln\">env</span><span class=\"pun\">.</span><span class=\"typ\">Environment</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">net</span><span class=\"pun\">.</span><span class=\"typ\">UnknownHostException</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"com\">// same as @Configuration @EnableAutoConfiguration @ComponentScan</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"lit\">@SpringBootApplication</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Application</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> main</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pun\">[]</span><span class=\"pln\"> args</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">UnknownHostException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">SpringApplication</span><span class=\"pln\"> app </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">SpringApplication</span><span class=\"pun\">(</span><span class=\"typ\">Application</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Environment</span><span class=\"pln\"> environment </span><span class=\"pun\">=</span><span class=\"pln\"> app</span><span class=\"pun\">.</span><span class=\"pln\">run</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">).</span><span class=\"pln\">getEnvironment</span><span class=\"pun\">();</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-3-databaseconfiguration-java\"><a name=\"3.创建DatabaseConfiguration.java\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3.创建DatabaseConfiguration.java</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">config</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">alibaba</span><span class=\"pun\">.</span><span class=\"pln\">druid</span><span class=\"pun\">.</span><span class=\"pln\">pool</span><span class=\"pun\">.</span><span class=\"typ\">DruidDataSource</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">boot</span><span class=\"pun\">.</span><span class=\"pln\">bind</span><span class=\"pun\">.</span><span class=\"typ\">RelaxedPropertyResolver</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"typ\">ApplicationContextException</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"typ\">EnvironmentAware</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Bean</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Configuration</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">core</span><span class=\"pun\">.</span><span class=\"pln\">env</span><span class=\"pun\">.</span><span class=\"typ\">Environment</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">orm</span><span class=\"pun\">.</span><span class=\"pln\">hibernate4</span><span class=\"pun\">.</span><span class=\"typ\">HibernateTransactionManager</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">orm</span><span class=\"pun\">.</span><span class=\"pln\">hibernate4</span><span class=\"pun\">.</span><span class=\"typ\">LocalSessionFactoryBean</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">transaction</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">EnableTransactionManagement</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">StringUtils</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> javax</span><span class=\"pun\">.</span><span class=\"pln\">sql</span><span class=\"pun\">.</span><span class=\"typ\">DataSource</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">sql</span><span class=\"pun\">.</span><span class=\"typ\">SQLException</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Arrays</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Properties</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"lit\">@Configuration</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"lit\">@EnableTransactionManagement</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">DatabaseConfiguration</span><span class=\"pln\"> </span><span class=\"kwd\">implements</span><span class=\"pln\"> </span><span class=\"typ\">EnvironmentAware</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Environment</span><span class=\"pln\"> environment</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">RelaxedPropertyResolver</span><span class=\"pln\"> datasourcePropertyResolver</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//从application.yml中读取资源</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> setEnvironment</span><span class=\"pun\">(</span><span class=\"typ\">Environment</span><span class=\"pln\"> environment</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">environment </span><span class=\"pun\">=</span><span class=\"pln\"> environment</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">datasourcePropertyResolver </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RelaxedPropertyResolver</span><span class=\"pun\">(</span><span class=\"pln\">environment</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\"spring.datasource.\"</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//datasource</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Bean</span><span class=\"pun\">(</span><span class=\"pln\">initMethod </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"init\"</span><span class=\"pun\">,</span><span class=\"pln\"> destroyMethod </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"close\"</span><span class=\"pun\">)</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">DataSource</span><span class=\"pln\"> dataSource</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">StringUtils</span><span class=\"pun\">.</span><span class=\"pln\">isEmpty</span><span class=\"pun\">(</span><span class=\"pln\">datasourcePropertyResolver</span><span class=\"pun\">.</span><span class=\"pln\">getProperty</span><span class=\"pun\">(</span><span class=\"str\">\"url\"</span><span class=\"pun\">)))</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"pln\">out</span><span class=\"pun\">.</span><span class=\"pln\">println</span><span class=\"pun\">(</span><span class=\"str\">\"Your database connection pool configuration is incorrect!\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">                    </span><span class=\"str\">\" Please check your Spring profile, current profiles are:\"</span><span class=\"pun\">+</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">Arrays</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">(</span><span class=\"pln\">environment</span><span class=\"pun\">.</span><span class=\"pln\">getActiveProfiles</span><span class=\"pun\">()));</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ApplicationContextException</span><span class=\"pun\">(</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">                    </span><span class=\"str\">\"Database connection pool is not configured correctly\"</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">DruidDataSource</span><span class=\"pln\"> druidDataSource </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">DruidDataSource</span><span class=\"pun\">();</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setUrl</span><span class=\"pun\">(</span><span class=\"pln\">datasourcePropertyResolver</span><span class=\"pun\">.</span><span class=\"pln\">getProperty</span><span class=\"pun\">(</span><span class=\"str\">\"url\"</span><span class=\"pun\">));</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setUsername</span><span class=\"pun\">(</span><span class=\"pln\">datasourcePropertyResolver</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"pun\">.</span><span class=\"pln\">getProperty</span><span class=\"pun\">(</span><span class=\"str\">\"username\"</span><span class=\"pun\">));</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setPassword</span><span class=\"pun\">(</span><span class=\"pln\">datasourcePropertyResolver</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"pun\">.</span><span class=\"pln\">getProperty</span><span class=\"pun\">(</span><span class=\"str\">\"password\"</span><span class=\"pun\">));</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setInitialSize</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setMinIdle</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setMaxActive</span><span class=\"pun\">(</span><span class=\"lit\">20</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setMaxWait</span><span class=\"pun\">(</span><span class=\"lit\">60000</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setTimeBetweenEvictionRunsMillis</span><span class=\"pun\">(</span><span class=\"lit\">60000</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setMinEvictableIdleTimeMillis</span><span class=\"pun\">(</span><span class=\"lit\">300000</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setValidationQuery</span><span class=\"pun\">(</span><span class=\"str\">\"SELECT　\'x\'\"</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setTestWhileIdle</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setTestOnBorrow</span><span class=\"pun\">(</span><span class=\"kwd\">false</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setTestOnReturn</span><span class=\"pun\">(</span><span class=\"kwd\">false</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> druidDataSource</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//sessionFactory</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Bean</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">LocalSessionFactoryBean</span><span class=\"pln\"> sessionFactory</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">LocalSessionFactoryBean</span><span class=\"pln\"> localSessionFactoryBean </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">LocalSessionFactoryBean</span><span class=\"pun\">();</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        localSessionFactoryBean</span><span class=\"pun\">.</span><span class=\"pln\">setDataSource</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">dataSource</span><span class=\"pun\">());</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Properties</span><span class=\"pln\"> properties1 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Properties</span><span class=\"pun\">();</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        properties1</span><span class=\"pun\">.</span><span class=\"pln\">setProperty</span><span class=\"pun\">(</span><span class=\"str\">\"hibernate.dialect\"</span><span class=\"pun\">,</span><span class=\"str\">\"org.hibernate.dialect.MySQL5Dialect\"</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        properties1</span><span class=\"pun\">.</span><span class=\"pln\">setProperty</span><span class=\"pun\">(</span><span class=\"str\">\"hibernate.show_sql\"</span><span class=\"pun\">,</span><span class=\"str\">\"false\"</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        localSessionFactoryBean</span><span class=\"pun\">.</span><span class=\"pln\">setHibernateProperties</span><span class=\"pun\">(</span><span class=\"pln\">properties1</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        localSessionFactoryBean</span><span class=\"pun\">.</span><span class=\"pln\">setPackagesToScan</span><span class=\"pun\">(</span><span class=\"str\">\"*\"</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> localSessionFactoryBean</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//txManager事务开启</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Bean</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">HibernateTransactionManager</span><span class=\"pln\"> txManager</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">HibernateTransactionManager</span><span class=\"pln\"> hibernateTransactionManager </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HibernateTransactionManager</span><span class=\"pun\">();</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        hibernateTransactionManager</span><span class=\"pun\">.</span><span class=\"pln\">setSessionFactory</span><span class=\"pun\">(</span><span class=\"pln\">sessionFactory</span><span class=\"pun\">().</span><span class=\"pln\">getObject</span><span class=\"pun\">());</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> hibernateTransactionManager</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-4-commonaction-java-\"><a name=\"4.创建CommonAction.java(这是一个测试类)\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4.创建CommonAction.java(这是一个测试类)</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">hibernate</span><span class=\"pun\">.</span><span class=\"typ\">SQLQuery</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">hibernate</span><span class=\"pun\">.</span><span class=\"typ\">Session</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">hibernate</span><span class=\"pun\">.</span><span class=\"typ\">SessionFactory</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">transaction</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Transactional</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">.</span><span class=\"pln\">bind</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">RequestMapping</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">.</span><span class=\"pln\">bind</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">RestController</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> javax</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Resource</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> javax</span><span class=\"pun\">.</span><span class=\"pln\">servlet</span><span class=\"pun\">.</span><span class=\"pln\">http</span><span class=\"pun\">.</span><span class=\"typ\">HttpServletResponse</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">io</span><span class=\"pun\">.</span><span class=\"typ\">IOException</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">List</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"lit\">@RestController</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"lit\">@Transactional</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">CommonAction</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Resource</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">SessionFactory</span><span class=\"pln\"> sessionFactory</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@RequestMapping</span><span class=\"pun\">(</span><span class=\"str\">\"test\"</span><span class=\"pun\">)</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> test</span><span class=\"pun\">(</span><span class=\"typ\">HttpServletResponse</span><span class=\"pln\"> response</span><span class=\"pun\">){</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Session</span><span class=\"pln\"> session </span><span class=\"pun\">=</span><span class=\"pln\"> sessionFactory</span><span class=\"pun\">.</span><span class=\"pln\">getCurrentSession</span><span class=\"pun\">();</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">SQLQuery</span><span class=\"pln\"> sqlQuery </span><span class=\"pun\">=</span><span class=\"pln\"> session</span><span class=\"pun\">.</span><span class=\"pln\">createSQLQuery</span><span class=\"pun\">(</span><span class=\"str\">\"select * from user\"</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">List</span><span class=\"pln\"> list </span><span class=\"pun\">=</span><span class=\"pln\"> sqlQuery</span><span class=\"pun\">.</span><span class=\"pln\">list</span><span class=\"pun\">();</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"pln\">out</span><span class=\"pun\">.</span><span class=\"pln\">printf</span><span class=\"pun\">(</span><span class=\"pln\">list</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">()+</span><span class=\"str\">\"\"</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">try</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            response</span><span class=\"pun\">.</span><span class=\"pln\">setContentType</span><span class=\"pun\">(</span><span class=\"str\">\"application/json\"</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">            response</span><span class=\"pun\">.</span><span class=\"pln\">setHeader</span><span class=\"pun\">(</span><span class=\"str\">\"Cache-Control\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"no-cache\"</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">            response</span><span class=\"pun\">.</span><span class=\"pln\">setCharacterEncoding</span><span class=\"pun\">(</span><span class=\"str\">\"UTF-8\"</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">            response</span><span class=\"pun\">.</span><span class=\"pln\">getWriter</span><span class=\"pun\">().</span><span class=\"pln\">write</span><span class=\"pun\">(</span><span class=\"str\">\"{\\\"msg\\\":\\\"调用成功\\\"}\"</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">catch</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">IOException</span><span class=\"pln\"> e</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            e</span><span class=\"pun\">.</span><span class=\"pln\">printStackTrace</span><span class=\"pun\">();</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-5-application-yml\"><a name=\"5.创建application.yml\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>5.创建application.yml</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-json\"><span class=\"pln\">server</span><span class=\"pun\">:</span></code></li><li class=\"L1\"><code class=\"lang-json\"><span class=\"pln\">    port</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">8080</span></code></li><li class=\"L2\"><code class=\"lang-json\"><span class=\"pln\">    address</span><span class=\"pun\">:</span><span class=\"pln\"> localhost</span></code></li><li class=\"L3\"><code class=\"lang-json\"></code></li><li class=\"L4\"><code class=\"lang-json\"><span class=\"pln\">spring</span><span class=\"pun\">:</span></code></li><li class=\"L5\"><code class=\"lang-json\"><span class=\"pln\">    datasource</span><span class=\"pun\">:</span></code></li><li class=\"L6\"><code class=\"lang-json\"><span class=\"pln\">        url</span><span class=\"pun\">:</span><span class=\"pln\"> jdbc</span><span class=\"pun\">:</span><span class=\"pln\">mysql</span><span class=\"pun\">://</span><span class=\"pln\">localhost</span><span class=\"pun\">:</span><span class=\"lit\">3306</span><span class=\"pun\">/</span><span class=\"pln\">cppba</span></code></li><li class=\"L7\"><code class=\"lang-json\"><span class=\"pln\">        username</span><span class=\"pun\">:</span><span class=\"pln\"> root</span></code></li><li class=\"L8\"><code class=\"lang-json\"><span class=\"pln\">        password</span><span class=\"pun\">:</span><span class=\"pln\"> root</span></code></li></ol></pre>\n<h2 id=\"h2-6-\"><a name=\"6.启动项目\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>6.启动项目</h2><p>我们点击启动按钮<br><img src=\"http://image.cppba.com/Image/article/60bfbf98-bc9b-4621-a5e2-41e7a6772658.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<p>控制台会打印如下内容：</p>\n<p><img src=\"http://image.cppba.com/Image/article/baa0e47e-9ff6-43ea-839f-5f59de22b6cd.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<p><img src=\"http://image.cppba.com/Image/article/734ab22a-cc2b-4a5e-acaa-e6e79792f5ca.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<p>启动成功<br>接下来我们访问<a href=\"http://127.0.0.1:8080/test\">http://127.0.0.1:8080/test</a><br>(我的CommonAction中RequestMapping(“test”),所以访问路径是test)</p>\n<p><img src=\"http://image.cppba.com/Image/article/77eb1320-647c-4086-ab00-ea68bfed7eb0.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<p>到此spring-boot配置成功！</p>\n<blockquote>\n<p>参考项目：<a href=\"https://github.com/bigbeef/cppba-spring-boot\">https://github.com/bigbeef/cppba-spring-boot</a><br>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://www.cppba.com\">http://www.cppba.com</a></p>\n</blockquote>\n</div>'),(2,'2016-07-14 08:58:11',0,1,5,'centos下java存储mysql中文乱码','centos下java存储mysql中文乱码，在windows下没问题','## 发现问题\n运行以下sql，我们发现字符集中character_set_server编码为lantin1：\n```mysql\nmysql> show variables like \'character%\';\n+--------------------------+----------------------------+\n| Variable_name            | Value                      |\n+--------------------------+----------------------------+\n| character_set_client     | utf8                       |\n| character_set_connection | utf8                       |\n| character_set_database   | utf8                       |\n| character_set_filesystem | binary                     |\n| character_set_results    | utf8                       |\n| character_set_server     | latin1                     |\n| character_set_system     | utf8                       |\n| character_sets_dir       | /usr/share/mysql/charsets/ |\n+--------------------------+----------------------------+\n```\n## 修改配置文件\n\n在centos命令行输入：\n\n```shell\n>vim /etc/my.cnf\n```\n\n追加如下内容：\n````shell\n[client]\ndefault-character-set=utf8\n\n[mysql]\ndefault-character-set=utf8\n\n[mysqld]\ncharacter-set-server=utf8\n````\n\n然后在在mysql控制台查看：\n```mysql\nmysql> show variables like \'character%\';\n+--------------------------+----------------------------+\n| Variable_name            | Value                      |\n+--------------------------+----------------------------+\n| character_set_client     | utf8                       |\n| character_set_connection | utf8                       |\n| character_set_database   | utf8                       |\n| character_set_filesystem | binary                     |\n| character_set_results    | utf8                       |\n| character_set_server     | utf8                       |\n| character_set_system     | utf8                       |\n| character_sets_dir       | /usr/share/mysql/charsets/ |\n+--------------------------+----------------------------+\n```\n\n> github地址：https://github.com/bigbeef\n> 个人博客：http://www.cppba.com','<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><h2 id=\"h2-u53D1u73B0u95EEu9898\"><a name=\"发现问题\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>发现问题</h2><p>运行以下sql，我们发现字符集中character_set_server编码为lantin1：</p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-mysql\"><span class=\"pln\">mysql</span><span class=\"pun\">&gt;</span><span class=\"pln\"> show variables like </span><span class=\"str\">\'character%\'</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-mysql\"><span class=\"pun\">+--------------------------+----------------------------+</span></code></li><li class=\"L2\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> </span><span class=\"typ\">Variable_name</span><span class=\"pln\">            </span><span class=\"pun\">|</span><span class=\"pln\"> </span><span class=\"typ\">Value</span><span class=\"pln\">                      </span><span class=\"pun\">|</span></code></li><li class=\"L3\"><code class=\"lang-mysql\"><span class=\"pun\">+--------------------------+----------------------------+</span></code></li><li class=\"L4\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_client     </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L5\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_connection </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L6\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_database   </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L7\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_filesystem </span><span class=\"pun\">|</span><span class=\"pln\"> binary                     </span><span class=\"pun\">|</span></code></li><li class=\"L8\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_results    </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L9\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_server     </span><span class=\"pun\">|</span><span class=\"pln\"> latin1                     </span><span class=\"pun\">|</span></code></li><li class=\"L0\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_system     </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L1\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_sets_dir       </span><span class=\"pun\">|</span><span class=\"pln\"> </span><span class=\"str\">/usr/</span><span class=\"pln\">share</span><span class=\"pun\">/</span><span class=\"pln\">mysql</span><span class=\"pun\">/</span><span class=\"pln\">charsets</span><span class=\"pun\">/</span><span class=\"pln\"> </span><span class=\"pun\">|</span></code></li><li class=\"L2\"><code class=\"lang-mysql\"><span class=\"pun\">+--------------------------+----------------------------+</span></code></li></ol></pre>\n<h2 id=\"h2-u4FEEu6539u914Du7F6Eu6587u4EF6\"><a name=\"修改配置文件\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>修改配置文件</h2><p>在centos命令行输入：</p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-shell\"><span class=\"pun\">&gt;</span><span class=\"pln\">vim </span><span class=\"pun\">/</span><span class=\"pln\">etc</span><span class=\"pun\">/</span><span class=\"kwd\">my</span><span class=\"pun\">.</span><span class=\"pln\">cnf</span></code></li></ol></pre>\n<p>追加如下内容：</p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-shell\"><span class=\"pun\">[</span><span class=\"pln\">client</span><span class=\"pun\">]</span></code></li><li class=\"L1\"><code class=\"lang-shell\"><span class=\"kwd\">default</span><span class=\"pun\">-</span><span class=\"pln\">character</span><span class=\"pun\">-</span><span class=\"kwd\">set</span><span class=\"pun\">=</span><span class=\"pln\">utf8</span></code></li><li class=\"L2\"><code class=\"lang-shell\"></code></li><li class=\"L3\"><code class=\"lang-shell\"><span class=\"pun\">[</span><span class=\"pln\">mysql</span><span class=\"pun\">]</span></code></li><li class=\"L4\"><code class=\"lang-shell\"><span class=\"kwd\">default</span><span class=\"pun\">-</span><span class=\"pln\">character</span><span class=\"pun\">-</span><span class=\"kwd\">set</span><span class=\"pun\">=</span><span class=\"pln\">utf8</span></code></li><li class=\"L5\"><code class=\"lang-shell\"></code></li><li class=\"L6\"><code class=\"lang-shell\"><span class=\"pun\">[</span><span class=\"pln\">mysqld</span><span class=\"pun\">]</span></code></li><li class=\"L7\"><code class=\"lang-shell\"><span class=\"pln\">character</span><span class=\"pun\">-</span><span class=\"kwd\">set</span><span class=\"pun\">-</span><span class=\"pln\">server</span><span class=\"pun\">=</span><span class=\"pln\">utf8</span></code></li></ol></pre>\n<p>然后在在mysql控制台查看：</p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-mysql\"><span class=\"pln\">mysql</span><span class=\"pun\">&gt;</span><span class=\"pln\"> show variables like </span><span class=\"str\">\'character%\'</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-mysql\"><span class=\"pun\">+--------------------------+----------------------------+</span></code></li><li class=\"L2\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> </span><span class=\"typ\">Variable_name</span><span class=\"pln\">            </span><span class=\"pun\">|</span><span class=\"pln\"> </span><span class=\"typ\">Value</span><span class=\"pln\">                      </span><span class=\"pun\">|</span></code></li><li class=\"L3\"><code class=\"lang-mysql\"><span class=\"pun\">+--------------------------+----------------------------+</span></code></li><li class=\"L4\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_client     </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L5\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_connection </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L6\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_database   </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L7\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_filesystem </span><span class=\"pun\">|</span><span class=\"pln\"> binary                     </span><span class=\"pun\">|</span></code></li><li class=\"L8\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_results    </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L9\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_server     </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L0\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_system     </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L1\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_sets_dir       </span><span class=\"pun\">|</span><span class=\"pln\"> </span><span class=\"str\">/usr/</span><span class=\"pln\">share</span><span class=\"pun\">/</span><span class=\"pln\">mysql</span><span class=\"pun\">/</span><span class=\"pln\">charsets</span><span class=\"pun\">/</span><span class=\"pln\"> </span><span class=\"pun\">|</span></code></li><li class=\"L2\"><code class=\"lang-mysql\"><span class=\"pun\">+--------------------------+----------------------------+</span></code></li></ol></pre>\n<blockquote>\n<p>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://www.cppba.com\">http://www.cppba.com</a></p>\n</blockquote>\n</div>'),(3,'2016-07-21 13:29:51',0,1,5,'centos端口开启','我们刚开始用centos可能会有这种情况，明明服务器配置好了，为什么外网就是访问不了，这个时候你要考虑是不是你的端口没有打开centos端口开启','```java\ncentos6：\n\n1.打开80端口：\n/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT\n2.保存设置：\n/etc/rc.d/init.d/iptables save\n3.重启防火墙：\nservice iptables restart\n4.查看防火墙状态：\n/etc/init.d/iptables status\n\ncentos7办法：\n1.// 查看 firewalld\nsystemctl status firewalld.service\n2.// 关闭 firewalld\nsystemctl stop firewalld.service\n3.// 禁止开机启动 firewalld\nsystemctl disable firewalld.service\n4.// 安装 iptables\nyum install iptables-services\n5.// 配置 iptables\nvi /etc/sysconfig/iptables\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT\n6.// 重启防火墙\nservice iptables restart\n\n```\n\n> github地址：https://github.com/bigbeef\n> 个人博客：http://www.cppba.com','<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">centos6</span><span class=\"pun\">：</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"lit\">1.</span><span class=\"pun\">打开</span><span class=\"lit\">80</span><span class=\"pun\">端口：</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pun\">/</span><span class=\"pln\">sbin</span><span class=\"pun\">/</span><span class=\"pln\">iptables </span><span class=\"pun\">-</span><span class=\"pln\">I INPUT </span><span class=\"pun\">-</span><span class=\"pln\">p tcp </span><span class=\"pun\">--</span><span class=\"pln\">dport </span><span class=\"lit\">80</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\">j ACCEPT</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"lit\">2.</span><span class=\"pun\">保存设置：</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pun\">/</span><span class=\"pln\">etc</span><span class=\"pun\">/</span><span class=\"pln\">rc</span><span class=\"pun\">.</span><span class=\"pln\">d</span><span class=\"pun\">/</span><span class=\"pln\">init</span><span class=\"pun\">.</span><span class=\"pln\">d</span><span class=\"pun\">/</span><span class=\"pln\">iptables save</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"lit\">3.</span><span class=\"pun\">重启防火墙：</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">service iptables restart</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"lit\">4.</span><span class=\"pun\">查看防火墙状态：</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pun\">/</span><span class=\"pln\">etc</span><span class=\"pun\">/</span><span class=\"pln\">init</span><span class=\"pun\">.</span><span class=\"pln\">d</span><span class=\"pun\">/</span><span class=\"pln\">iptables status</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">centos7</span><span class=\"pun\">办法：</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"lit\">1.</span><span class=\"com\">// 查看 firewalld</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">systemctl status firewalld</span><span class=\"pun\">.</span><span class=\"pln\">service</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"lit\">2.</span><span class=\"com\">// 关闭 firewalld</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">systemctl stop firewalld</span><span class=\"pun\">.</span><span class=\"pln\">service</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"lit\">3.</span><span class=\"com\">// 禁止开机启动 firewalld</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">systemctl disable firewalld</span><span class=\"pun\">.</span><span class=\"pln\">service</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"lit\">4.</span><span class=\"com\">// 安装 iptables</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">yum install iptables</span><span class=\"pun\">-</span><span class=\"pln\">services</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"lit\">5.</span><span class=\"com\">// 配置 iptables</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">vi </span><span class=\"pun\">/</span><span class=\"pln\">etc</span><span class=\"pun\">/</span><span class=\"pln\">sysconfig</span><span class=\"pun\">/</span><span class=\"pln\">iptables</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pun\">-</span><span class=\"pln\">A INPUT </span><span class=\"pun\">-</span><span class=\"pln\">p tcp </span><span class=\"pun\">-</span><span class=\"pln\">m state </span><span class=\"pun\">--</span><span class=\"pln\">state NEW </span><span class=\"pun\">-</span><span class=\"pln\">m tcp </span><span class=\"pun\">--</span><span class=\"pln\">dport </span><span class=\"lit\">22</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\">j ACCEPT</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"lit\">6.</span><span class=\"com\">// 重启防火墙</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">service iptables restart</span></code></li></ol></pre>\n<blockquote>\n<p>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://www.cppba.com\">http://www.cppba.com</a></p>\n</blockquote>\n</div>'),(4,'2016-07-21 13:39:39',0,1,1,'spring-boot使用教程(二)：增加自定义filter','传统的javaEE增加Filter是在web.xml中配置，然而spring-boot中很明显不能这样实现，那怎么办呢？看完下面的教程，答案自然知道了。','##前言\n传统的javaEE增加Filter是在web.xml中配置，如以下代码：\n````xml\n<filter>\n     <filter-name>TestFilter</filter-name>\n        <filter-class>com.cppba.filter.TestFilter</filter-class>\n</filter>\n<filter-mapping>\n    <filter-name>TestFilter</filter-name>\n    <url-pattern>/*</url-pattern>\n    <init-param>\n       <param-name>paramName</param-name>\n       <param-value>paramValue</param-value>\n    </init-param>\n</filter-mapping>\n````\n然而spring-boot中很明显不能这样实现，那怎么办呢？看完下面的教程，答案自然知道了。\n\n## 1.创建自定义Filter\n````java\npackage com.cppba.filter;\n\nimport javax.servlet.*;\nimport java.io.IOException;\n\npublic class TestFilter implements Filter {\n    @Override\n    public void init(FilterConfig filterConfig) throws ServletException {\n\n    }\n\n    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)\n            throws IOException, ServletException {\n        System.out.println(\"TestFilter\");\n    }\n\n    @Override\n    public void destroy() {\n\n    }\n}\n````\n\n## 2.在ApplicationConfiguration.java中增加一个@bean\n````java\n @Bean\n    public FilterRegistrationBean testFilterRegistration() {\n\n        FilterRegistrationBean registration = new FilterRegistrationBean();\n        registration.setFilter(new TestFilter());\n        registration.addUrlPatterns(\"/*\");\n        registration.addInitParameter(\"paramName\", \"paramValue\");\n        registration.setName(\"testFilter\");\n        registration.setOrder(1);\n        return registration;\n    }\n````\n## 3.启动项目\n你会看到控制台打印如下代码：\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/a0452a60-1161-4f63-8501-10fd3556fbd4.png)\n\n##4.访问项目\n最后我们访问以下http://127.0.0.1:8080/test\n如果你看到控制台打印出:TestFilter\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/bf0a4bae-16fa-48d6-aa50-46b686cbffa2.png \"https://github.com/bigbeef/cppba-spring-boot\")\n\n恭喜你，配置成功！\n\n>参考项目：https://github.com/bigbeef/cppba-spring-boot\n> github地址：https://github.com/bigbeef\n> 个人博客：http://www.cppba.com','<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><h2 id=\"h2-u524Du8A00\"><a name=\"前言\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>前言</h2><p>传统的javaEE增加Filter是在web.xml中配置，如以下代码：</p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-xml\"><span class=\"tag\">&lt;filter&gt;</span></code></li><li class=\"L1\"><code class=\"lang-xml\"><span class=\"pln\">     </span><span class=\"tag\">&lt;filter-name&gt;</span><span class=\"pln\">TestFilter</span><span class=\"tag\">&lt;/filter-name&gt;</span></code></li><li class=\"L2\"><code class=\"lang-xml\"><span class=\"pln\">        </span><span class=\"tag\">&lt;filter-class&gt;</span><span class=\"pln\">com.cppba.filter.TestFilter</span><span class=\"tag\">&lt;/filter-class&gt;</span></code></li><li class=\"L3\"><code class=\"lang-xml\"><span class=\"tag\">&lt;/filter&gt;</span></code></li><li class=\"L4\"><code class=\"lang-xml\"><span class=\"tag\">&lt;filter-mapping&gt;</span></code></li><li class=\"L5\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;filter-name&gt;</span><span class=\"pln\">TestFilter</span><span class=\"tag\">&lt;/filter-name&gt;</span></code></li><li class=\"L6\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;url-pattern&gt;</span><span class=\"pln\">/*</span><span class=\"tag\">&lt;/url-pattern&gt;</span></code></li><li class=\"L7\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;init-param&gt;</span></code></li><li class=\"L8\"><code class=\"lang-xml\"><span class=\"pln\">       </span><span class=\"tag\">&lt;param-name&gt;</span><span class=\"pln\">paramName</span><span class=\"tag\">&lt;/param-name&gt;</span></code></li><li class=\"L9\"><code class=\"lang-xml\"><span class=\"pln\">       </span><span class=\"tag\">&lt;param-value&gt;</span><span class=\"pln\">paramValue</span><span class=\"tag\">&lt;/param-value&gt;</span></code></li><li class=\"L0\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;/init-param&gt;</span></code></li><li class=\"L1\"><code class=\"lang-xml\"><span class=\"tag\">&lt;/filter-mapping&gt;</span></code></li></ol></pre>\n<p>然而spring-boot中很明显不能这样实现，那怎么办呢？看完下面的教程，答案自然知道了。</p>\n<h2 id=\"h2-1-filter\"><a name=\"1.创建自定义Filter\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.创建自定义Filter</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">filter</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> javax</span><span class=\"pun\">.</span><span class=\"pln\">servlet</span><span class=\"pun\">.*;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">io</span><span class=\"pun\">.</span><span class=\"typ\">IOException</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">TestFilter</span><span class=\"pln\"> </span><span class=\"kwd\">implements</span><span class=\"pln\"> </span><span class=\"typ\">Filter</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> init</span><span class=\"pun\">(</span><span class=\"typ\">FilterConfig</span><span class=\"pln\"> filterConfig</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">ServletException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> doFilter</span><span class=\"pun\">(</span><span class=\"typ\">ServletRequest</span><span class=\"pln\"> servletRequest</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">ServletResponse</span><span class=\"pln\"> servletResponse</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">FilterChain</span><span class=\"pln\"> filterChain</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">IOException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">ServletException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"pln\">out</span><span class=\"pun\">.</span><span class=\"pln\">println</span><span class=\"pun\">(</span><span class=\"str\">\"TestFilter\"</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-java\"></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> destroy</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-2-applicationconfiguration-java-bean\"><a name=\"2.在ApplicationConfiguration.java中增加一个@bean\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.在ApplicationConfiguration.java中增加一个<a href=\"https://github.com/bean\" title=\"@bean\" class=\"at-link\">@bean</a></h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\"> </span><span class=\"lit\">@Bean</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">FilterRegistrationBean</span><span class=\"pln\"> testFilterRegistration</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">FilterRegistrationBean</span><span class=\"pln\"> registration </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">FilterRegistrationBean</span><span class=\"pun\">();</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        registration</span><span class=\"pun\">.</span><span class=\"pln\">setFilter</span><span class=\"pun\">(</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">TestFilter</span><span class=\"pun\">());</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        registration</span><span class=\"pun\">.</span><span class=\"pln\">addUrlPatterns</span><span class=\"pun\">(</span><span class=\"str\">\"/*\"</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        registration</span><span class=\"pun\">.</span><span class=\"pln\">addInitParameter</span><span class=\"pun\">(</span><span class=\"str\">\"paramName\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"paramValue\"</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        registration</span><span class=\"pun\">.</span><span class=\"pln\">setName</span><span class=\"pun\">(</span><span class=\"str\">\"testFilter\"</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        registration</span><span class=\"pun\">.</span><span class=\"pln\">setOrder</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> registration</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-3-\"><a name=\"3.启动项目\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3.启动项目</h2><p>你会看到控制台打印如下代码：<br><img src=\"http://image.cppba.com/Image/article/a0452a60-1161-4f63-8501-10fd3556fbd4.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<h2 id=\"h2-4-\"><a name=\"4.访问项目\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4.访问项目</h2><p>最后我们访问以下<a href=\"http://127.0.0.1:8080/test\">http://127.0.0.1:8080/test</a><br>如果你看到控制台打印出:TestFilter<br><img src=\"http://image.cppba.com/Image/article/bf0a4bae-16fa-48d6-aa50-46b686cbffa2.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\" title=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<p>恭喜你，配置成功！</p>\n<blockquote>\n<p>参考项目：<a href=\"https://github.com/bigbeef/cppba-spring-boot\">https://github.com/bigbeef/cppba-spring-boot</a><br>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://www.cppba.com\">http://www.cppba.com</a></p>\n</blockquote>\n</div>'),(5,'2016-07-21 13:45:28',0,1,1,'spring-session使用教程(一)：redis共享session','说白了就是解决session共享问题，spring-session将web的session存到一个指定的位置，集群的所有web服务器在操作session的时候就去这个位置找','**1.Spring session简介：**\n说白了就是解决session共享问题，spring-session将web的session存到一个指定的位置，集群的所有web服务器在操作session的时候就去这个位置找。（我比较喜欢用最土的语言解释，不官方但是容易理解）\n\n注意：本文只教你怎么使用spring-session-redis，不会深入探讨为什么这么实现，因为暂时我也没弄清他的源源码，但是照下面的做法你一定能跑起来。\n\n**2.maven在pom.xml中配置**\n````java\n<!--spring-session-->\n<dependency>\n    <groupId>org.springframework.session</groupId>\n    <artifactId>spring-session-data-redis</artifactId>\n    <version>1.2.1.RELEASE</version>\n</dependency>\n````\n\n**3.创建RedisHttpSessionConfig**\n````java\npackage com.cppba.config;\nimport org.springframework.context.annotation.Bean;\n\nimport org.springframework.data.redis.connection.jedis.JedisConnectionFactory;\nimport org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;\n\n@EnableRedisHttpSession\npublic class RedisHttpSessionConfig {\n\n    @Bean\n    public JedisConnectionFactory connectionFactory() {\n        JedisConnectionFactory connection = new JedisConnectionFactory();\n        connection.setHostName(\"127.0.0.1\");\n        connection.setPort(6379);\n        return connection;\n    }\n}\n````\n****\n**4.创建SpringSessionInitializer**\n````java\npackage com.cppba.config;\n\nimport org.springframework.session.web.context.AbstractHttpSessionApplicationInitializer;\n\npublic class SpringSessionInitializer extends AbstractHttpSessionApplicationInitializer {\n}\n````\n\n接下来，把项目跑起来，在浏览器上访问一下，我们再在redis的控制台输入keys *，如果你能看到像下图的结果，恭喜你，配置成功！\n\n![https://github.com/bigbeef](http://image.cppba.com/Image/article/cc986884-2e9f-40a0-9567-599e224230aa.png)\n\n> github地址：https://github.com/bigbeef\n> 个人博客：http://www.cppba.com','<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><p><strong>1.Spring session简介：</strong><br>说白了就是解决session共享问题，spring-session将web的session存到一个指定的位置，集群的所有web服务器在操作session的时候就去这个位置找。（我比较喜欢用最土的语言解释，不官方但是容易理解）</p>\n<p>注意：本文只教你怎么使用spring-session-redis，不会深入探讨为什么这么实现，因为暂时我也没弄清他的源源码，但是照下面的做法你一定能跑起来。</p>\n<p><strong>2.maven在pom.xml中配置</strong></p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"pun\">&lt;!--</span><span class=\"pln\">spring</span><span class=\"pun\">-</span><span class=\"pln\">session</span><span class=\"pun\">--&gt;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pun\">&lt;</span><span class=\"pln\">dependency</span><span class=\"pun\">&gt;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">&lt;</span><span class=\"pln\">groupId</span><span class=\"pun\">&gt;</span><span class=\"pln\">org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">session</span><span class=\"pun\">&lt;/</span><span class=\"pln\">groupId</span><span class=\"pun\">&gt;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">&lt;</span><span class=\"pln\">artifactId</span><span class=\"pun\">&gt;</span><span class=\"pln\">spring</span><span class=\"pun\">-</span><span class=\"pln\">session</span><span class=\"pun\">-</span><span class=\"pln\">data</span><span class=\"pun\">-</span><span class=\"pln\">redis</span><span class=\"pun\">&lt;/</span><span class=\"pln\">artifactId</span><span class=\"pun\">&gt;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">&lt;</span><span class=\"pln\">version</span><span class=\"pun\">&gt;</span><span class=\"lit\">1.2</span><span class=\"pun\">.</span><span class=\"lit\">1.RELEASE</span><span class=\"pun\">&lt;/</span><span class=\"pln\">version</span><span class=\"pun\">&gt;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pun\">&lt;/</span><span class=\"pln\">dependency</span><span class=\"pun\">&gt;</span></code></li></ol></pre>\n<p><strong>3.创建RedisHttpSessionConfig</strong></p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">config</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Bean</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">redis</span><span class=\"pun\">.</span><span class=\"pln\">connection</span><span class=\"pun\">.</span><span class=\"pln\">jedis</span><span class=\"pun\">.</span><span class=\"typ\">JedisConnectionFactory</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">session</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">redis</span><span class=\"pun\">.</span><span class=\"pln\">config</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">.</span><span class=\"pln\">http</span><span class=\"pun\">.</span><span class=\"typ\">EnableRedisHttpSession</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"lit\">@EnableRedisHttpSession</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">RedisHttpSessionConfig</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Bean</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">JedisConnectionFactory</span><span class=\"pln\"> connectionFactory</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">JedisConnectionFactory</span><span class=\"pln\"> connection </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">JedisConnectionFactory</span><span class=\"pun\">();</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        connection</span><span class=\"pun\">.</span><span class=\"pln\">setHostName</span><span class=\"pun\">(</span><span class=\"str\">\"127.0.0.1\"</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        connection</span><span class=\"pun\">.</span><span class=\"pln\">setPort</span><span class=\"pun\">(</span><span class=\"lit\">6379</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> connection</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<hr>\n<p><strong>4.创建SpringSessionInitializer</strong></p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">config</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">session</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"typ\">AbstractHttpSessionApplicationInitializer</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">SpringSessionInitializer</span><span class=\"pln\"> </span><span class=\"kwd\">extends</span><span class=\"pln\"> </span><span class=\"typ\">AbstractHttpSessionApplicationInitializer</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<p>接下来，把项目跑起来，在浏览器上访问一下，我们再在redis的控制台输入keys *，如果你能看到像下图的结果，恭喜你，配置成功！</p>\n<p><img src=\"http://image.cppba.com/Image/article/cc986884-2e9f-40a0-9567-599e224230aa.png\" alt=\"https://github.com/bigbeef\"></p>\n<blockquote>\n<p>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://www.cppba.com\">http://www.cppba.com</a></p>\n</blockquote>\n</div>'),(6,'2016-07-28 08:59:24',0,1,8,'redis for windows 安装教程','redis for windows 安装教程','##1.下载redis for windows\n下载地址：http://pan.baidu.com/s/1hrYynq8\n##2.解压redis\n下载后解压，你会看到如下目录，下面是我的目录，记住你的绝对目录地址\n（我的是：C:\\Users\\Administrator\\Desktop\\redis64-3.0.501）\n\n![](http://image.cppba.com/Image/article/942a8101-6153-4bc4-8d95-8abc17104f1e.png)\n\n##3.运行redis\n按键win+R，打卡cmd\n依次输入：cd C:\\Users\\Administrator\\Desktop\\redis64-3.0.501\nredis-server.exe redis.windows.conf\n\n![](http://image.cppba.com/Image/article/f0e667f2-65eb-4435-9d5b-518f5f9e7213.png)\n\n安装成功（这个界面千万不到关闭，否则redis也会关闭）\n\n##4.测试\n我们测试一下：\n同样打开cmd  输入telnet 127.0.0.1 6379，此时会打卡redis命令控制界面\n我们依次输入：set test 123456\n    get test\n\n![](http://image.cppba.com/Image/article/5a56fe11-37f3-48a8-9c9f-6108aba9f75a.png)\n\n如果你能弹出结果，恭喜你安装成功\n\n> github地址：https://github.com/bigbeef\n> 个人博客：http://www.cppba.com','<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><h2 id=\"h2-1-redis-for-windows\"><a name=\"1.下载redis for windows\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.下载redis for windows</h2><p>下载地址：<a href=\"http://pan.baidu.com/s/1hrYynq8\">http://pan.baidu.com/s/1hrYynq8</a></p>\n<h2 id=\"h2-2-redis\"><a name=\"2.解压redis\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.解压redis</h2><p>下载后解压，你会看到如下目录，下面是我的目录，记住你的绝对目录地址<br>（我的是：C:\\Users\\Administrator\\Desktop\\redis64-3.0.501）</p>\n<p><img src=\"http://image.cppba.com/Image/article/942a8101-6153-4bc4-8d95-8abc17104f1e.png\" alt=\"\"></p>\n<h2 id=\"h2-3-redis\"><a name=\"3.运行redis\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3.运行redis</h2><p>按键win+R，打卡cmd<br>依次输入：cd C:\\Users\\Administrator\\Desktop\\redis64-3.0.501<br>redis-server.exe redis.windows.conf</p>\n<p><img src=\"http://image.cppba.com/Image/article/f0e667f2-65eb-4435-9d5b-518f5f9e7213.png\" alt=\"\"></p>\n<p>安装成功（这个界面千万不到关闭，否则redis也会关闭）</p>\n<h2 id=\"h2-4-\"><a name=\"4.测试\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4.测试</h2><p>我们测试一下：<br>同样打开cmd  输入telnet 127.0.0.1 6379，此时会打卡redis命令控制界面<br>我们依次输入：set test 123456<br>    get test</p>\n<p><img src=\"http://image.cppba.com/Image/article/5a56fe11-37f3-48a8-9c9f-6108aba9f75a.png\" alt=\"\"></p>\n<p>如果你能弹出结果，恭喜你安装成功</p>\n<blockquote>\n<p>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://www.cppba.com\">http://www.cppba.com</a></p>\n</blockquote>\n</div>'),(7,'2016-08-03 02:27:55',0,1,9,'jackson学习（一）：jsonStringToList(json字符串转自定义类数组)','Jackson 是一个 Java 用来处理 JSON 格式数据的类库，性能非常好。\n\n我也一直在用jackson，但是在开发过程中也遇到过一些需要花较长时间攻克的难题，我想把这些难题一一记录下来，给还没有攻克这个难题的jackson你们提供参考，希望你少走弯路。','## 前言\nJackson 是一个 Java 用来处理 JSON 格式数据的类库，性能非常好。\n\n我也一直在用jackson，但是在开发过程中也遇到过一些需要花较长时间攻克的难题，我想把这些难题一一记录下来，给还没有攻克这个难题的jackson你们提供参考，希望你少走弯路。\n\n##1.maven的pom.xml配置\n````xml\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.cppba</groupId>\n  <artifactId>cppba-jackson</artifactId>\n  <version>1.0.0</version>\n  <packaging>jar</packaging>\n\n  <name>cppba-jackson</name>\n  <url>http://maven.apache.org</url>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n\n  <dependencies>\n     <!--关键这里，加入jackson库-->\n    <dependency>\n      <groupId>com.fasterxml.jackson.core</groupId>\n      <artifactId>jackson-databind</artifactId>\n      <version>2.8.0</version>\n    </dependency>\n  </dependencies>\n</project>\n````\n\n## 2.编写测试代码\n\n### 2.1 json字符串直接转成List<JsonArrayToList >,代码复杂度较高\n\n````java\npackage com.cppba.jackson;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport com.fasterxml.jackson.databind.JavaType;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class StringToObject {\n    public static ObjectMapper objectMapper = new ObjectMapper();\n\n    public static void main(String[] args) throws IOException {\n        String jsonStr = \"[{\\\"id\\\":\\\"1\\\",\\\"values\\\":[\\\"1\\\",\\\"2\\\"]},{\\\"id\\\":\\\"2\\\",\\\"values\\\":[\\\"11\\\",\\\"22\\\"]}]\";\n        JavaType javaType = getCollectionType(ArrayList.class, JsonArrayToList.class);\n        List<JsonArrayToList> list = objectMapper.readValue(jsonStr, javaType);\n        for (JsonArrayToList jatl : list) {\n            System.out.println(jatl.toString());\n        }\n    }\n\n    public static JavaType getCollectionType(Class<?> collectionClass, Class<?>... elementClasses) {\n        return objectMapper.getTypeFactory().constructParametricType(collectionClass, elementClasses);\n    }\n}\n\nclass JsonArrayToList {\n    @JsonProperty(\"id\")\n    private String id;\n\n    @JsonProperty(\"values\")\n    private List<Integer> values;\n\n    @Override\n    public String toString() {\n        return \"JsonArrayToList{\" +\n                \"id=\'\" + id + \'\\\'\' +\n                \", values=\" + values +\n                \'}\';\n    }\n}\n````\n\n### 2.2json字符串转成JsonArrayToList[]，代码实现比较简单\n````java\npackage com.cppba.jackson;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.io.IOException;\nimport java.util.List;\n\npublic class StringToObject {\n    public static ObjectMapper objectMapper = new ObjectMapper();\n\n    public static void main(String[] args) throws IOException {\n        String jsonStr = \"[{\\\"id\\\":\\\"1\\\",\\\"values\\\":[\\\"1\\\",\\\"2\\\"]},{\\\"id\\\":\\\"2\\\",\\\"values\\\":[\\\"11\\\",\\\"22\\\"]}]\";\n        JsonArrayToList[] jsonArrayToList = objectMapper.readValue(jsonStr, JsonArrayToList[].class);\n        for (JsonArrayToList jatl : jsonArrayToList) {\n            System.out.println(jatl.toString());\n        }\n    }\n}\n\nclass JsonArrayToList {\n    @JsonProperty(\"id\")\n    private String id;\n\n    @JsonProperty(\"values\")\n    private List<Integer> values;\n\n    @Override\n    public String toString() {\n        return \"JsonArrayToList{\" +\n                \"id=\'\" + id + \'\\\'\' +\n                \", values=\" + values +\n                \'}\';\n    }\n}\n````\n\n## 3.运行结果\n无论你是2.1还是2.2的方法实现，运行结果都是一样，如下图：\n\n![](http://image.cppba.com/Image/article/31923564-2dbc-4171-a63d-ae8f00a2bce1.png)\n\n## 4：推荐\n其实在业务需求满足的情况下，个人还是推荐2.2的实现方式，代码简单，容易理解！\n\n>参考项目：https://github.com/bigbeef/cppba-jackson\n> github地址：https://github.com/bigbeef\n> 个人博客：http://www.cppba.com','<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><h2 id=\"h2-u524Du8A00\"><a name=\"前言\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>前言</h2><p>Jackson 是一个 Java 用来处理 JSON 格式数据的类库，性能非常好。</p>\n<p>我也一直在用jackson，但是在开发过程中也遇到过一些需要花较长时间攻克的难题，我想把这些难题一一记录下来，给还没有攻克这个难题的jackson你们提供参考，希望你少走弯路。</p>\n<h2 id=\"h2-1-maven-pom-xml-\"><a name=\"1.maven的pom.xml配置\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.maven的pom.xml配置</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-xml\"><span class=\"tag\">&lt;project</span><span class=\"pln\"> </span><span class=\"atn\">xmlns</span><span class=\"pun\">=</span><span class=\"atv\">\"http://maven.apache.org/POM/4.0.0\"</span><span class=\"pln\"> </span><span class=\"atn\">xmlns:xsi</span><span class=\"pun\">=</span><span class=\"atv\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></code></li><li class=\"L1\"><code class=\"lang-xml\"><span class=\"pln\">  </span><span class=\"atn\">xsi:schemaLocation</span><span class=\"pun\">=</span><span class=\"atv\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span><span class=\"tag\">&gt;</span></code></li><li class=\"L2\"><code class=\"lang-xml\"><span class=\"pln\">  </span><span class=\"tag\">&lt;modelVersion&gt;</span><span class=\"pln\">4.0.0</span><span class=\"tag\">&lt;/modelVersion&gt;</span></code></li><li class=\"L3\"><code class=\"lang-xml\"></code></li><li class=\"L4\"><code class=\"lang-xml\"><span class=\"pln\">  </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">com.cppba</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L5\"><code class=\"lang-xml\"><span class=\"pln\">  </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">cppba-jackson</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L6\"><code class=\"lang-xml\"><span class=\"pln\">  </span><span class=\"tag\">&lt;version&gt;</span><span class=\"pln\">1.0.0</span><span class=\"tag\">&lt;/version&gt;</span></code></li><li class=\"L7\"><code class=\"lang-xml\"><span class=\"pln\">  </span><span class=\"tag\">&lt;packaging&gt;</span><span class=\"pln\">jar</span><span class=\"tag\">&lt;/packaging&gt;</span></code></li><li class=\"L8\"><code class=\"lang-xml\"></code></li><li class=\"L9\"><code class=\"lang-xml\"><span class=\"pln\">  </span><span class=\"tag\">&lt;name&gt;</span><span class=\"pln\">cppba-jackson</span><span class=\"tag\">&lt;/name&gt;</span></code></li><li class=\"L0\"><code class=\"lang-xml\"><span class=\"pln\">  </span><span class=\"tag\">&lt;url&gt;</span><span class=\"pln\">http://maven.apache.org</span><span class=\"tag\">&lt;/url&gt;</span></code></li><li class=\"L1\"><code class=\"lang-xml\"></code></li><li class=\"L2\"><code class=\"lang-xml\"><span class=\"pln\">  </span><span class=\"tag\">&lt;properties&gt;</span></code></li><li class=\"L3\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;project.build.sourceEncoding&gt;</span><span class=\"pln\">UTF-8</span><span class=\"tag\">&lt;/project.build.sourceEncoding&gt;</span></code></li><li class=\"L4\"><code class=\"lang-xml\"><span class=\"pln\">  </span><span class=\"tag\">&lt;/properties&gt;</span></code></li><li class=\"L5\"><code class=\"lang-xml\"></code></li><li class=\"L6\"><code class=\"lang-xml\"><span class=\"pln\">  </span><span class=\"tag\">&lt;dependencies&gt;</span></code></li><li class=\"L7\"><code class=\"lang-xml\"><span class=\"pln\">     </span><span class=\"com\">&lt;!--关键这里，加入jackson库--&gt;</span></code></li><li class=\"L8\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L9\"><code class=\"lang-xml\"><span class=\"pln\">      </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">com.fasterxml.jackson.core</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L0\"><code class=\"lang-xml\"><span class=\"pln\">      </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">jackson-databind</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L1\"><code class=\"lang-xml\"><span class=\"pln\">      </span><span class=\"tag\">&lt;version&gt;</span><span class=\"pln\">2.8.0</span><span class=\"tag\">&lt;/version&gt;</span></code></li><li class=\"L2\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L3\"><code class=\"lang-xml\"><span class=\"pln\">  </span><span class=\"tag\">&lt;/dependencies&gt;</span></code></li><li class=\"L4\"><code class=\"lang-xml\"><span class=\"tag\">&lt;/project&gt;</span></code></li></ol></pre>\n<h2 id=\"h2-2-\"><a name=\"2.编写测试代码\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.编写测试代码</h2><h3 id=\"h3-2-1-json-list-jsonarraytolist-\"><a name=\"2.1 json字符串直接转成List<JsonArrayToList >,代码复杂度较高\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.1 json字符串直接转成List<jsonarraytolist>,代码复杂度较高</jsonarraytolist></h3><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">jackson</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">fasterxml</span><span class=\"pun\">.</span><span class=\"pln\">jackson</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">JsonProperty</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">fasterxml</span><span class=\"pun\">.</span><span class=\"pln\">jackson</span><span class=\"pun\">.</span><span class=\"pln\">databind</span><span class=\"pun\">.</span><span class=\"typ\">JavaType</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">fasterxml</span><span class=\"pun\">.</span><span class=\"pln\">jackson</span><span class=\"pun\">.</span><span class=\"pln\">databind</span><span class=\"pun\">.</span><span class=\"typ\">ObjectMapper</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">io</span><span class=\"pun\">.</span><span class=\"typ\">IOException</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">ArrayList</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">List</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">StringToObject</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">ObjectMapper</span><span class=\"pln\"> objectMapper </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ObjectMapper</span><span class=\"pun\">();</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> main</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pun\">[]</span><span class=\"pln\"> args</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">IOException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> jsonStr </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"[{\\\"id\\\":\\\"1\\\",\\\"values\\\":[\\\"1\\\",\\\"2\\\"]},{\\\"id\\\":\\\"2\\\",\\\"values\\\":[\\\"11\\\",\\\"22\\\"]}]\"</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">JavaType</span><span class=\"pln\"> javaType </span><span class=\"pun\">=</span><span class=\"pln\"> getCollectionType</span><span class=\"pun\">(</span><span class=\"typ\">ArrayList</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">JsonArrayToList</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">JsonArrayToList</span><span class=\"pun\">&gt;</span><span class=\"pln\"> list </span><span class=\"pun\">=</span><span class=\"pln\"> objectMapper</span><span class=\"pun\">.</span><span class=\"pln\">readValue</span><span class=\"pun\">(</span><span class=\"pln\">jsonStr</span><span class=\"pun\">,</span><span class=\"pln\"> javaType</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">JsonArrayToList</span><span class=\"pln\"> jatl </span><span class=\"pun\">:</span><span class=\"pln\"> list</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"pln\">out</span><span class=\"pun\">.</span><span class=\"pln\">println</span><span class=\"pun\">(</span><span class=\"pln\">jatl</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">());</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">JavaType</span><span class=\"pln\"> getCollectionType</span><span class=\"pun\">(</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?&gt;</span><span class=\"pln\"> collectionClass</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?&gt;...</span><span class=\"pln\"> elementClasses</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> objectMapper</span><span class=\"pun\">.</span><span class=\"pln\">getTypeFactory</span><span class=\"pun\">().</span><span class=\"pln\">constructParametricType</span><span class=\"pun\">(</span><span class=\"pln\">collectionClass</span><span class=\"pun\">,</span><span class=\"pln\"> elementClasses</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-java\"></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">JsonArrayToList</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@JsonProperty</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">)</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> id</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@JsonProperty</span><span class=\"pun\">(</span><span class=\"str\">\"values\"</span><span class=\"pun\">)</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">Integer</span><span class=\"pun\">&gt;</span><span class=\"pln\"> values</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> toString</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"str\">\"JsonArrayToList{\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\"id=\'\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> id </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\'\\\'\'</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\", values=\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> values </span><span class=\"pun\">+</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\'}\'</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h3 id=\"h3-2-2json-jsonarraytolist-\"><a name=\"2.2json字符串转成JsonArrayToList[]，代码实现比较简单\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.2json字符串转成JsonArrayToList[]，代码实现比较简单</h3><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">jackson</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">fasterxml</span><span class=\"pun\">.</span><span class=\"pln\">jackson</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">JsonProperty</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">fasterxml</span><span class=\"pun\">.</span><span class=\"pln\">jackson</span><span class=\"pun\">.</span><span class=\"pln\">databind</span><span class=\"pun\">.</span><span class=\"typ\">ObjectMapper</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">io</span><span class=\"pun\">.</span><span class=\"typ\">IOException</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">List</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">StringToObject</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">ObjectMapper</span><span class=\"pln\"> objectMapper </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ObjectMapper</span><span class=\"pun\">();</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> main</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pun\">[]</span><span class=\"pln\"> args</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">IOException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> jsonStr </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"[{\\\"id\\\":\\\"1\\\",\\\"values\\\":[\\\"1\\\",\\\"2\\\"]},{\\\"id\\\":\\\"2\\\",\\\"values\\\":[\\\"11\\\",\\\"22\\\"]}]\"</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">JsonArrayToList</span><span class=\"pun\">[]</span><span class=\"pln\"> jsonArrayToList </span><span class=\"pun\">=</span><span class=\"pln\"> objectMapper</span><span class=\"pun\">.</span><span class=\"pln\">readValue</span><span class=\"pun\">(</span><span class=\"pln\">jsonStr</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">JsonArrayToList</span><span class=\"pun\">[].</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">JsonArrayToList</span><span class=\"pln\"> jatl </span><span class=\"pun\">:</span><span class=\"pln\"> jsonArrayToList</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"pln\">out</span><span class=\"pun\">.</span><span class=\"pln\">println</span><span class=\"pun\">(</span><span class=\"pln\">jatl</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">());</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">JsonArrayToList</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@JsonProperty</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">)</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> id</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@JsonProperty</span><span class=\"pun\">(</span><span class=\"str\">\"values\"</span><span class=\"pun\">)</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">Integer</span><span class=\"pun\">&gt;</span><span class=\"pln\"> values</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> toString</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"str\">\"JsonArrayToList{\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\"id=\'\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> id </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\'\\\'\'</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\", values=\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> values </span><span class=\"pun\">+</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\'}\'</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-3-\"><a name=\"3.运行结果\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3.运行结果</h2><p>无论你是2.1还是2.2的方法实现，运行结果都是一样，如下图：</p>\n<p><img src=\"http://image.cppba.com/Image/article/31923564-2dbc-4171-a63d-ae8f00a2bce1.png\" alt=\"\"></p>\n<h2 id=\"h2-4-\"><a name=\"4：推荐\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4：推荐</h2><p>其实在业务需求满足的情况下，个人还是推荐2.2的实现方式，代码简单，容易理解！</p>\n<blockquote>\n<p>参考项目：<a href=\"https://github.com/bigbeef/cppba-jackson\">https://github.com/bigbeef/cppba-jackson</a><br>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://www.cppba.com\">http://www.cppba.com</a></p>\n</blockquote>\n</div>'),(8,'2016-08-03 02:29:00',0,1,9,'jackson学习（二）：jsonStringToObject(json字符串转自定义类)','jackson介绍和maven配置在第一节说过了，有不明白的同学可以翻一翻第一节','说明：jackson介绍和maven配置在第一节说过了，有不明白的同学可以翻一翻第一节\n\n## 1.编写测试代码\n\n````java\npackage com.cppba.jackson;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.io.IOException;\nimport java.util.List;\n\npublic class StringToObject {\n    public static void main(String[] args) throws IOException {\n        String jsonString = \"{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"bigbeef\\\",\\\"list\\\":[{\\\"str\\\":\\\"str1\\\",\\\"integer\\\":\\\"1\\\"},\" +\n                \"{\\\"str\\\":\\\"str2\\\",\\\"integer\\\":\\\"2\\\"}]}\";\n        ObjectMapper objectMapper = new ObjectMapper();\n        MyObject myObject = objectMapper.readValue(jsonString, MyObject.class);\n        System.out.println(myObject.toString());\n    }\n}\n\nclass MyObject{\n    @JsonProperty(\"id\")\n    private String id;\n    @JsonProperty(\"name\")\n    private String name;\n    @JsonProperty(\"list\")\n    private List<MyListProject> list;\n\n    @Override\n    public String toString() {\n        return \"MyObject{\" +\n                \"id=\'\" + id + \'\\\'\' +\n                \", name=\'\" + name + \'\\\'\' +\n                \", list=\" + list +\n                \'}\';\n    }\n}\n\nclass MyListProject{\n    @JsonProperty(\"str\")\n    private String str;\n    @JsonProperty(\"integer\")\n    private Integer integer;\n    @Override\n    public String toString() {\n        return \"MyListProject{\" +\n                \"str=\'\" + str + \'\\\'\' +\n                \", integer=\" + integer +\n                \'}\';\n    }\n}\n````\n\n## 2.运行结果\n\n![](http://image.cppba.com/Image/article/a1551dbb-c0fe-46c6-96d2-61f3ce264e10.png)\n\n##3.用途\n字符串转自定义类这种方式非常常见，比如在做微信开发、调用第三方接口时，返回的json字符串基本都是这种方式，如果你学到了这一节的方法，你的开发效率会提高很多！\n\n>参考项目：https://github.com/bigbeef/cppba-jackson\n> github地址：https://github.com/bigbeef\n> 个人博客：http://www.cppba.com','<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><p>说明：jackson介绍和maven配置在第一节说过了，有不明白的同学可以翻一翻第一节</p>\n<h2 id=\"h2-1-\"><a name=\"1.编写测试代码\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.编写测试代码</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">jackson</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">fasterxml</span><span class=\"pun\">.</span><span class=\"pln\">jackson</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">JsonProperty</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">fasterxml</span><span class=\"pun\">.</span><span class=\"pln\">jackson</span><span class=\"pun\">.</span><span class=\"pln\">databind</span><span class=\"pun\">.</span><span class=\"typ\">ObjectMapper</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">io</span><span class=\"pun\">.</span><span class=\"typ\">IOException</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">List</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">StringToObject</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> main</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pun\">[]</span><span class=\"pln\"> args</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">IOException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> jsonString </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"bigbeef\\\",\\\"list\\\":[{\\\"str\\\":\\\"str1\\\",\\\"integer\\\":\\\"1\\\"},\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\"{\\\"str\\\":\\\"str2\\\",\\\"integer\\\":\\\"2\\\"}]}\"</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">ObjectMapper</span><span class=\"pln\"> objectMapper </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ObjectMapper</span><span class=\"pun\">();</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">MyObject</span><span class=\"pln\"> myObject </span><span class=\"pun\">=</span><span class=\"pln\"> objectMapper</span><span class=\"pun\">.</span><span class=\"pln\">readValue</span><span class=\"pun\">(</span><span class=\"pln\">jsonString</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">MyObject</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"pln\">out</span><span class=\"pun\">.</span><span class=\"pln\">println</span><span class=\"pun\">(</span><span class=\"pln\">myObject</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">());</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">MyObject</span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@JsonProperty</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">)</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> id</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@JsonProperty</span><span class=\"pun\">(</span><span class=\"str\">\"name\"</span><span class=\"pun\">)</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> name</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@JsonProperty</span><span class=\"pun\">(</span><span class=\"str\">\"list\"</span><span class=\"pun\">)</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">MyListProject</span><span class=\"pun\">&gt;</span><span class=\"pln\"> list</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> toString</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"str\">\"MyObject{\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\"id=\'\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> id </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\'\\\'\'</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\", name=\'\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> name </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\'\\\'\'</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\", list=\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> list </span><span class=\"pun\">+</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\'}\'</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">MyListProject</span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@JsonProperty</span><span class=\"pun\">(</span><span class=\"str\">\"str\"</span><span class=\"pun\">)</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> str</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@JsonProperty</span><span class=\"pun\">(</span><span class=\"str\">\"integer\"</span><span class=\"pun\">)</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> integer</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> toString</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"str\">\"MyListProject{\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\"str=\'\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> str </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\'\\\'\'</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\", integer=\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> integer </span><span class=\"pun\">+</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\'}\'</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-2-\"><a name=\"2.运行结果\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.运行结果</h2><p><img src=\"http://image.cppba.com/Image/article/a1551dbb-c0fe-46c6-96d2-61f3ce264e10.png\" alt=\"\"></p>\n<h2 id=\"h2-3-\"><a name=\"3.用途\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3.用途</h2><p>字符串转自定义类这种方式非常常见，比如在做微信开发、调用第三方接口时，返回的json字符串基本都是这种方式，如果你学到了这一节的方法，你的开发效率会提高很多！</p>\n<blockquote>\n<p>参考项目：<a href=\"https://github.com/bigbeef/cppba-jackson\">https://github.com/bigbeef/cppba-jackson</a><br>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://www.cppba.com\">http://www.cppba.com</a></p>\n</blockquote>\n</div>'),(9,'2016-08-03 02:32:19',0,1,7,'java善假于物（一）：利用google提供jar生成二维码','在实际开发中，二维码生成是很常见的，然而google给我们提供了一套快捷生成二维码的jar，下面我们来研究一下怎么使用.','## 介绍\n在实际开发中，二维码生成是很常见的，然而google给我们提供了一套快捷生成二维码的jar，下面我们来研究一下怎么使用.\n\n## 1.maven配置\n```xml\n<!-- 谷歌二维码 -->\n<dependency>\n	<groupId>com.google.zxing</groupId>\n	<artifactId>core</artifactId>\n	<version>3.2.1</version>\n</dependency>\n```\n\n## 2.创建一个二维码生成工具类QRCodeUtil .java\n```java\npackage com.cppba.core.util;\n\nimport com.google.zxing.BarcodeFormat;\nimport com.google.zxing.EncodeHintType;\nimport com.google.zxing.MultiFormatWriter;\nimport com.google.zxing.WriterException;\nimport com.google.zxing.common.BitMatrix;\nimport com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;\n\nimport java.awt.image.BufferedImage;\nimport java.util.Hashtable;\n\npublic class QRCodeUtil {\n\n	/**\n	 *\n	 * QRCodeCreate(生成二维码)\n	 * @param content  二维码内容\n	 * @param W		宽度\n	 * @param H		高度\n	 * @return\n	 */\n	public static BufferedImage QRCodeCreate(String content, Integer W, Integer H){\n		//生成二维码\n		MultiFormatWriter mfw = new MultiFormatWriter();\n		BitMatrix bitMatrix = null;\n		Hashtable<EncodeHintType, Object> hints = new Hashtable<EncodeHintType, Object>();\n		hints.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.H);\n		hints.put(EncodeHintType.CHARACTER_SET, \"utf-8\");\n		hints.put(EncodeHintType.MARGIN, 0);\n		try {\n			bitMatrix = mfw.encode(content, BarcodeFormat.QR_CODE, W, H,hints);\n		} catch (WriterException e) {\n			e.printStackTrace();\n		}\n		int width = bitMatrix.getWidth();\n		int height = bitMatrix.getHeight();\n		BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);\n		for(int x=0; x < width; x++){\n			for(int y=0; y < height; y++){\n				image.setRGB(x, y, bitMatrix.get(x, y) ? 0xFF000000 : 0xFFFFFFFF);\n			}\n		}\n		return image;\n	}\n}\n```\n\n## 3.写一个测试的Controller\n```java\n/**\n * 获取二维码\n * text 必须用UTF8编码格式，x内容出现 & 符号时，请用 %26 代替,换行符使用 %0A\n */\n@RequestMapping(\"/qrcode_image.htm\")\npublic void qrcode_image(\n		HttpServletRequest request,HttpServletResponse response,\n		@RequestParam(value=\"text\", defaultValue=\"\")String text) throws IOException {\n\n	response.setHeader(\"Pragma\", \"No-cache\");\n	response.setHeader(\"Cache-Control\", \"no-cache\");\n	response.setDateHeader(\"Expires\", 0);\n	response.setContentType(\"image/jpeg\");\n\n	BufferedImage image = QRCodeUtil.QRCodeCreate(text, 250, 250);\n\n	ImageIO.write(image, \"png\",response.getOutputStream());\n}\n```\n\n## 4.测试\n我们启动我们的项目，在浏览器直接访问我们测试控制器，并带上参数\n我这里是：http://127.0.0.1:8080/cppba-web/qrcode_image.htm?text=http://www.baidu.com\n\n## 5.运行结果\n\n![](http://image.cppba.com/Image/article/d27ae7b3-5dd0-4781-8094-c69dcd31fe0b.png)\n\n我们可以有手机扫描一下二维码，的确进的是百度首页，当然你可以自己修改text参数来动态生成你想要的二维码内容\n\n## 6.注意\n这里要提醒的是，text中不能带有“&“和换行符，当遇到这种符号时：& 符号用 %26 代替,换行符使用 %0A代替。\n\n> github地址：https://github.com/bigbeef\n> 个人博客：http://www.cppba.com','<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><h2 id=\"h2-u4ECBu7ECD\"><a name=\"介绍\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>介绍</h2><p>在实际开发中，二维码生成是很常见的，然而google给我们提供了一套快捷生成二维码的jar，下面我们来研究一下怎么使用.</p>\n<h2 id=\"h2-1-maven-\"><a name=\"1.maven配置\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.maven配置</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-xml\"><span class=\"com\">&lt;!-- 谷歌二维码 --&gt;</span></code></li><li class=\"L1\"><code class=\"lang-xml\"><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L2\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">com.google.zxing</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L3\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">core</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L4\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;version&gt;</span><span class=\"pln\">3.2.1</span><span class=\"tag\">&lt;/version&gt;</span></code></li><li class=\"L5\"><code class=\"lang-xml\"><span class=\"tag\">&lt;/dependency&gt;</span></code></li></ol></pre>\n<h2 id=\"h2-2-qrcodeutil-java\"><a name=\"2.创建一个二维码生成工具类QRCodeUtil .java\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.创建一个二维码生成工具类QRCodeUtil .java</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">core</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">google</span><span class=\"pun\">.</span><span class=\"pln\">zxing</span><span class=\"pun\">.</span><span class=\"typ\">BarcodeFormat</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">google</span><span class=\"pun\">.</span><span class=\"pln\">zxing</span><span class=\"pun\">.</span><span class=\"typ\">EncodeHintType</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">google</span><span class=\"pun\">.</span><span class=\"pln\">zxing</span><span class=\"pun\">.</span><span class=\"typ\">MultiFormatWriter</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">google</span><span class=\"pun\">.</span><span class=\"pln\">zxing</span><span class=\"pun\">.</span><span class=\"typ\">WriterException</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">google</span><span class=\"pun\">.</span><span class=\"pln\">zxing</span><span class=\"pun\">.</span><span class=\"pln\">common</span><span class=\"pun\">.</span><span class=\"typ\">BitMatrix</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">google</span><span class=\"pun\">.</span><span class=\"pln\">zxing</span><span class=\"pun\">.</span><span class=\"pln\">qrcode</span><span class=\"pun\">.</span><span class=\"pln\">decoder</span><span class=\"pun\">.</span><span class=\"typ\">ErrorCorrectionLevel</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">awt</span><span class=\"pun\">.</span><span class=\"pln\">image</span><span class=\"pun\">.</span><span class=\"typ\">BufferedImage</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Hashtable</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">QRCodeUtil</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"com\">     *</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"com\">     * QRCodeCreate(生成二维码)</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"com\">     * @param content  二维码内容</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"com\">     * @param W        宽度</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"com\">     * @param H        高度</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"com\">     * @return</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"com\">     */</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">BufferedImage</span><span class=\"pln\"> </span><span class=\"typ\">QRCodeCreate</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> content</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> W</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> H</span><span class=\"pun\">){</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"com\">//生成二维码</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">MultiFormatWriter</span><span class=\"pln\"> mfw </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">MultiFormatWriter</span><span class=\"pun\">();</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">BitMatrix</span><span class=\"pln\"> bitMatrix </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Hashtable</span><span class=\"pun\">&lt;</span><span class=\"typ\">EncodeHintType</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Object</span><span class=\"pun\">&gt;</span><span class=\"pln\"> hints </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Hashtable</span><span class=\"pun\">&lt;</span><span class=\"typ\">EncodeHintType</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Object</span><span class=\"pun\">&gt;();</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        hints</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"typ\">EncodeHintType</span><span class=\"pun\">.</span><span class=\"pln\">ERROR_CORRECTION</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">ErrorCorrectionLevel</span><span class=\"pun\">.</span><span class=\"pln\">H</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        hints</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"typ\">EncodeHintType</span><span class=\"pun\">.</span><span class=\"pln\">CHARACTER_SET</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"utf-8\"</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        hints</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"typ\">EncodeHintType</span><span class=\"pun\">.</span><span class=\"pln\">MARGIN</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">try</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">            bitMatrix </span><span class=\"pun\">=</span><span class=\"pln\"> mfw</span><span class=\"pun\">.</span><span class=\"pln\">encode</span><span class=\"pun\">(</span><span class=\"pln\">content</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">BarcodeFormat</span><span class=\"pun\">.</span><span class=\"pln\">QR_CODE</span><span class=\"pun\">,</span><span class=\"pln\"> W</span><span class=\"pun\">,</span><span class=\"pln\"> H</span><span class=\"pun\">,</span><span class=\"pln\">hints</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">catch</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">WriterException</span><span class=\"pln\"> e</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            e</span><span class=\"pun\">.</span><span class=\"pln\">printStackTrace</span><span class=\"pun\">();</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> width </span><span class=\"pun\">=</span><span class=\"pln\"> bitMatrix</span><span class=\"pun\">.</span><span class=\"pln\">getWidth</span><span class=\"pun\">();</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> height </span><span class=\"pun\">=</span><span class=\"pln\"> bitMatrix</span><span class=\"pun\">.</span><span class=\"pln\">getHeight</span><span class=\"pun\">();</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">BufferedImage</span><span class=\"pln\"> image </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">BufferedImage</span><span class=\"pun\">(</span><span class=\"pln\">width</span><span class=\"pun\">,</span><span class=\"pln\"> height</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">BufferedImage</span><span class=\"pun\">.</span><span class=\"pln\">TYPE_INT_RGB</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> x</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> x </span><span class=\"pun\">&lt;</span><span class=\"pln\"> width</span><span class=\"pun\">;</span><span class=\"pln\"> x</span><span class=\"pun\">++){</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> y</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> y </span><span class=\"pun\">&lt;</span><span class=\"pln\"> height</span><span class=\"pun\">;</span><span class=\"pln\"> y</span><span class=\"pun\">++){</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">                image</span><span class=\"pun\">.</span><span class=\"pln\">setRGB</span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">,</span><span class=\"pln\"> y</span><span class=\"pun\">,</span><span class=\"pln\"> bitMatrix</span><span class=\"pun\">.</span><span class=\"pln\">get</span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">,</span><span class=\"pln\"> y</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">?</span><span class=\"pln\"> </span><span class=\"lit\">0xFF000000</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">0xFFFFFFFF</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> image</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-3-controller\"><a name=\"3.写一个测试的Controller\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3.写一个测试的Controller</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"com\">/**</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"com\"> * 获取二维码</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"com\"> * text 必须用UTF8编码格式，x内容出现 &amp; 符号时，请用 %26 代替,换行符使用 %0A</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"com\"> */</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"lit\">@RequestMapping</span><span class=\"pun\">(</span><span class=\"str\">\"/qrcode_image.htm\"</span><span class=\"pun\">)</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> qrcode_image</span><span class=\"pun\">(</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">HttpServletRequest</span><span class=\"pln\"> request</span><span class=\"pun\">,</span><span class=\"typ\">HttpServletResponse</span><span class=\"pln\"> response</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"lit\">@RequestParam</span><span class=\"pun\">(</span><span class=\"pln\">value</span><span class=\"pun\">=</span><span class=\"str\">\"text\"</span><span class=\"pun\">,</span><span class=\"pln\"> defaultValue</span><span class=\"pun\">=</span><span class=\"str\">\"\"</span><span class=\"pun\">)</span><span class=\"typ\">String</span><span class=\"pln\"> text</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">IOException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    response</span><span class=\"pun\">.</span><span class=\"pln\">setHeader</span><span class=\"pun\">(</span><span class=\"str\">\"Pragma\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"No-cache\"</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    response</span><span class=\"pun\">.</span><span class=\"pln\">setHeader</span><span class=\"pun\">(</span><span class=\"str\">\"Cache-Control\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"no-cache\"</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    response</span><span class=\"pun\">.</span><span class=\"pln\">setDateHeader</span><span class=\"pun\">(</span><span class=\"str\">\"Expires\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    response</span><span class=\"pun\">.</span><span class=\"pln\">setContentType</span><span class=\"pun\">(</span><span class=\"str\">\"image/jpeg\"</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"typ\">BufferedImage</span><span class=\"pln\"> image </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">QRCodeUtil</span><span class=\"pun\">.</span><span class=\"typ\">QRCodeCreate</span><span class=\"pun\">(</span><span class=\"pln\">text</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">250</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">250</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"typ\">ImageIO</span><span class=\"pun\">.</span><span class=\"pln\">write</span><span class=\"pun\">(</span><span class=\"pln\">image</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"png\"</span><span class=\"pun\">,</span><span class=\"pln\">response</span><span class=\"pun\">.</span><span class=\"pln\">getOutputStream</span><span class=\"pun\">());</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-4-\"><a name=\"4.测试\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4.测试</h2><p>我们启动我们的项目，在浏览器直接访问我们测试控制器，并带上参数<br>我这里是：<a href=\"http://127.0.0.1:8080/cppba-web/qrcode_image.htm?text=http://www.baidu.com\">http://127.0.0.1:8080/cppba-web/qrcode_image.htm?text=http://www.baidu.com</a></p>\n<h2 id=\"h2-5-\"><a name=\"5.运行结果\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>5.运行结果</h2><p><img src=\"http://image.cppba.com/Image/article/d27ae7b3-5dd0-4781-8094-c69dcd31fe0b.png\" alt=\"\"></p>\n<p>我们可以有手机扫描一下二维码，的确进的是百度首页，当然你可以自己修改text参数来动态生成你想要的二维码内容</p>\n<h2 id=\"h2-6-\"><a name=\"6.注意\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>6.注意</h2><p>这里要提醒的是，text中不能带有“&amp;“和换行符，当遇到这种符号时：&amp; 符号用 %26 代替,换行符使用 %0A代替。</p>\n<blockquote>\n<p>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://www.cppba.com\">http://www.cppba.com</a></p>\n</blockquote>\n</div>'),(10,'2016-08-03 02:38:11',0,1,7,'java善假于物（二）：利用velocity生成模板代码','不知道大家有没有这样的感觉，在平时开发中，经常有很多dao、service类中存着很多重复的代码，Velocity提供了模板生成工具，今天我教大家怎么和这些大量的重复代码说再见。','## 前言\n不知道大家有没有这样的感觉，在平时开发中，经常有很多dao、service类中存着很多重复的代码，Velocity提供了模板生成工具，今天我教大家怎么和这些大量的重复代码说再见。\n\n###注意\n大家可以写适合自己的模板，这里为了演示，就直接拿cppba-web的模板来示范，至于velocity的语法大家可以找找度娘\n\n##maven配置\n```xml\n <!-- velocity -->\n<dependency>\n	<groupId>org.apache.velocity</groupId>\n	<artifactId>velocity</artifactId>\n	<version>1.7</version>\n</dependency>\n```\n\n##创建模板文件\n首先看下目录结构：\n\n![](http://image.cppba.com/Image/article/281957c9-bd1e-4826-89e5-baf537a5c7d6.png)\n\n这里演示我就只贴出ServiceImplTemplate.java，需要其他模板代码可以到我github里面下载\n```java\n#set ($domain = $!domainName.substring(0,1).toLowerCase()+$!domainName.substring(1))\npackage $!{packageName}.service.impl;\n\nimport $!{packageName}.core.bean.PageEntity;\nimport $!{packageName}.dao.$!{domainName}Dao;\nimport $!{packageName}.dto.$!{domainName}Dto;\nimport $!{packageName}.dto.BaseDto;\nimport $!{packageName}.entity.$!{domainName};\nimport $!{packageName}.service.$!{domainName}Service;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport javax.annotation.Resource;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Objects;\n\n/**\n * 开发者\n * nickName:大黄蜂\n * email:245655812@qq.com\n * github:https://github.com/bigbeef\n * velocity模板生成 cppba-codeTemplate\n */\n@Service\n@Transactional\npublic class $!{domainName}ServiceImpl implements $!{domainName}Service{\n	@Resource\n	private $!{domainName}Dao $!{domain}Dao;\n\n	@Override\n	public void save($!{domainName} $!{domain}) {\n		$!{domain}Dao.save($!{domain});\n	}\n\n	@Override\n	public void delete($!{domainName} $!{domain}) {\n		$!{domain}Dao.delete($!{domain});\n	}\n\n	@Override\n	public void update($!{domainName} $!{domain}) {\n		$!{domain}Dao.update($!{domain});\n	}\n\n	@Override\n	public $!{domainName} findById(int id) {\n		return ($!{domainName}) $!{domain}Dao.get($!{domainName}.class, id);\n	}\n\n	@Override\n	public PageEntity<$!{domainName}> query(BaseDto baseDto) {\n		String hql = \" select distinct $!{domain} from $!{domainName} $!{domain} where 1=1 \";\n		Map params = new HashMap<String,Object>();\n\n		$!{domainName}Dto $!{domain}Dto = ($!{domainName}Dto)baseDto;\n		$!{domainName} $!{domain} = $!{domain}Dto.get$!{domainName}();\n		int page = $!{domain}Dto.getPage();\n		int pageSize = $!{domain}Dto.getPageSize();\n\n		List list = $!{domain}Dao.query(hql,params,page,pageSize);\n		long count = $!{domain}Dao.count(hql,params);\n		PageEntity<$!{domainName}> pe = new PageEntity<$!{domainName}>();\n		pe.setCount(count);\n		pe.setList(list);\n		return pe;\n	}\n}\n```\n\n##模板生成\n接下来是生成模板的主函数：\n```java\npackage com.cppba.core;\n\nimport org.apache.velocity.Template;\nimport org.apache.velocity.VelocityContext;\nimport org.apache.velocity.app.Velocity;\nimport org.apache.velocity.app.VelocityEngine;\n\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.OutputStreamWriter;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Properties;\n\n/**\n * 开发者\n * nickName:大黄蜂\n * email:245655812@qq.com\n * github:https://github.com/bigbeef\n */\n\npublic class Main {\n\n    static String domainName = \"Articles\"; //类名\n    static String packageName = \"com.cppba\";//类包\n\n    static String templateDir = \"\\\\src\\\\main\\\\webapp\\\\template\\\\\";\n    static String sourcePath = System.getProperty(\"user.dir\")+templateDir;\n    static String resultDir = \"\\\\out\";\n    static String targetPath = System.getProperty(\"user.dir\")\n            + resultDir + \"\\\\\"\n            + packageName.replace(\".\", \"\\\\\");\n\n    public static void main(String []args) throws Exception{\n\n        Map<String,Object> map = new HashMap();\n        map.put(\"DaoTemplate.java\",\"dao/\" + domainName + \"Dao.java\");\n        map.put(\"ServiceTemplate.java\",\"service/\" + domainName + \"Service.java\");\n        map.put(\"ServiceImplTemplate.java\",\"service/impl/\" + domainName + \"ServiceImpl.java\");\n        map.put(\"DtoTemplate.java\",\"dto/\" + domainName + \"Dto.java\");\n\n        for(String templateFile:map.keySet()){\n            String targetFile = (String) map.get(templateFile);\n            Properties pro = new Properties();\n            pro.setProperty(Velocity.OUTPUT_ENCODING, \"UTF-8\");\n            pro.setProperty(Velocity.INPUT_ENCODING, \"UTF-8\");\n            pro.setProperty(Velocity.FILE_RESOURCE_LOADER_PATH, sourcePath);\n            VelocityEngine ve = new VelocityEngine(pro);\n\n            VelocityContext context = new VelocityContext();\n            context.put(\"domainName\",domainName);\n            context.put(\"packageName\",packageName);\n\n            Template t = ve.getTemplate(templateFile, \"UTF-8\");\n\n            File file = new File(targetPath, targetFile);\n            if (!file.getParentFile().exists())\n                file.getParentFile().mkdirs();\n            if (!file.exists())\n                file.createNewFile();\n\n            FileOutputStream outStream = new FileOutputStream(file);\n            OutputStreamWriter writer = new OutputStreamWriter(outStream,\n                    \"UTF-8\");\n            BufferedWriter sw = new BufferedWriter(writer);\n            t.merge(context, sw);\n            sw.flush();\n            sw.close();\n            outStream.close();\n            System.out.println(\"成功生成Java文件:\"\n                    + (targetPath + targetFile).replaceAll(\"/\", \"\\\\\\\\\"));\n        }\n    }\n}\n```\n\n## 生成java文件\n我们可以修改domainName和packageName来修改我们的包名和类名，我们运行下看：\n\n![](http://image.cppba.com/Image/article/8ddbb63b-71a4-428a-bc84-55db3195430b.png)\n\n我们看到生成成功，我们打开ArticlesServiceImpl.java看下：\n```java\npackage com.cppba.service.impl;\n\nimport com.cppba.core.bean.PageEntity;\nimport com.cppba.dao.ArticlesDao;\nimport com.cppba.dto.ArticlesDto;\nimport com.cppba.dto.BaseDto;\nimport com.cppba.entity.Articles;\nimport com.cppba.service.ArticlesService;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport javax.annotation.Resource;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Objects;\n\n/**\n * 开发者\n * nickName:大黄蜂\n * email:245655812@qq.com\n * github:https://github.com/bigbeef\n * velocity模板生成 cppba-codeTemplate\n */\n@Service\n@Transactional\npublic class ArticlesServiceImpl implements ArticlesService{\n	@Resource\n	private ArticlesDao articlesDao;\n\n	@Override\n	public void save(Articles articles) {\n		articlesDao.save(articles);\n	}\n\n	@Override\n	public void delete(Articles articles) {\n		articlesDao.delete(articles);\n	}\n\n	@Override\n	public void update(Articles articles) {\n		articlesDao.update(articles);\n	}\n\n	@Override\n	public Articles findById(int id) {\n		return (Articles) articlesDao.get(Articles.class, id);\n	}\n\n	@Override\n	public PageEntity<Articles> query(BaseDto baseDto) {\n		String hql = \" select distinct articles from Articles articles where 1=1 \";\n		Map params = new HashMap<String,Object>();\n\n		ArticlesDto articlesDto = (ArticlesDto)baseDto;\n		Articles articles = articlesDto.getArticles();\n		int page = articlesDto.getPage();\n		int pageSize = articlesDto.getPageSize();\n\n		List list = articlesDao.query(hql,params,page,pageSize);\n		long count = articlesDao.count(hql,params);\n		PageEntity<Articles> pe = new PageEntity<Articles>();\n		pe.setCount(count);\n		pe.setList(list);\n		return pe;\n	}\n}\n```\n\n生成成功，我们拷贝到cppba-web中可完美运行！\n\n>参考项目：https://github.com/bigbeef/cppba-codeTemplate\n> github地址：https://github.com/bigbeef\n> 个人博客：http://www.cppba.com','<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><h2 id=\"h2-u524Du8A00\"><a name=\"前言\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>前言</h2><p>不知道大家有没有这样的感觉，在平时开发中，经常有很多dao、service类中存着很多重复的代码，Velocity提供了模板生成工具，今天我教大家怎么和这些大量的重复代码说再见。</p>\n<h3 id=\"h3-u6CE8u610F\"><a name=\"注意\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>注意</h3><p>大家可以写适合自己的模板，这里为了演示，就直接拿cppba-web的模板来示范，至于velocity的语法大家可以找找度娘</p>\n<h2 id=\"h2-maven-\"><a name=\"maven配置\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>maven配置</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-xml\"><span class=\"pln\"> </span><span class=\"com\">&lt;!-- velocity --&gt;</span></code></li><li class=\"L1\"><code class=\"lang-xml\"><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L2\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.apache.velocity</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L3\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">velocity</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L4\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;version&gt;</span><span class=\"pln\">1.7</span><span class=\"tag\">&lt;/version&gt;</span></code></li><li class=\"L5\"><code class=\"lang-xml\"><span class=\"tag\">&lt;/dependency&gt;</span></code></li></ol></pre>\n<h2 id=\"h2-u521Bu5EFAu6A21u677Fu6587u4EF6\"><a name=\"创建模板文件\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>创建模板文件</h2><p>首先看下目录结构：</p>\n<p><img src=\"http://image.cppba.com/Image/article/281957c9-bd1e-4826-89e5-baf537a5c7d6.png\" alt=\"\"></p>\n<p>这里演示我就只贴出ServiceImplTemplate.java，需要其他模板代码可以到我github里面下载</p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"pun\">#</span><span class=\"pln\">set </span><span class=\"pun\">(</span><span class=\"pln\">$domain </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">!</span><span class=\"pln\">domainName</span><span class=\"pun\">.</span><span class=\"pln\">substring</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"lit\">1</span><span class=\"pun\">).</span><span class=\"pln\">toLowerCase</span><span class=\"pun\">()+</span><span class=\"pln\">$</span><span class=\"pun\">!</span><span class=\"pln\">domainName</span><span class=\"pun\">.</span><span class=\"pln\">substring</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">))</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">packageName</span><span class=\"pun\">}.</span><span class=\"pln\">service</span><span class=\"pun\">.</span><span class=\"pln\">impl</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">packageName</span><span class=\"pun\">}.</span><span class=\"pln\">core</span><span class=\"pun\">.</span><span class=\"pln\">bean</span><span class=\"pun\">.</span><span class=\"typ\">PageEntity</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">packageName</span><span class=\"pun\">}.</span><span class=\"pln\">dao</span><span class=\"pun\">.</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}</span><span class=\"typ\">Dao</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">packageName</span><span class=\"pun\">}.</span><span class=\"pln\">dto</span><span class=\"pun\">.</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}</span><span class=\"typ\">Dto</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">packageName</span><span class=\"pun\">}.</span><span class=\"pln\">dto</span><span class=\"pun\">.</span><span class=\"typ\">BaseDto</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">packageName</span><span class=\"pun\">}.</span><span class=\"pln\">entity</span><span class=\"pun\">.</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">};</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">packageName</span><span class=\"pun\">}.</span><span class=\"pln\">service</span><span class=\"pun\">.</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}</span><span class=\"typ\">Service</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">stereotype</span><span class=\"pun\">.</span><span class=\"typ\">Service</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">transaction</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Transactional</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> javax</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Resource</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">HashMap</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">List</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Map</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Objects</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"com\">/**</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"com\"> * 开发者</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"com\"> * nickName:大黄蜂</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"com\"> * email:245655812@qq.com</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"com\"> * github:https://github.com/bigbeef</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"com\"> * velocity模板生成 cppba-codeTemplate</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"com\"> */</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"lit\">@Service</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"lit\">@Transactional</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}</span><span class=\"typ\">ServiceImpl</span><span class=\"pln\"> </span><span class=\"kwd\">implements</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}</span><span class=\"typ\">Service</span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Resource</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}</span><span class=\"typ\">Dao</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">}</span><span class=\"typ\">Dao</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> save</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">})</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">}</span><span class=\"typ\">Dao</span><span class=\"pun\">.</span><span class=\"pln\">save</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">});</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"kwd\">delete</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">})</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">}</span><span class=\"typ\">Dao</span><span class=\"pun\">.</span><span class=\"kwd\">delete</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">});</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> update</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">})</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">}</span><span class=\"typ\">Dao</span><span class=\"pun\">.</span><span class=\"pln\">update</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">});</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}</span><span class=\"pln\"> findById</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> id</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">})</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">}</span><span class=\"typ\">Dao</span><span class=\"pun\">.</span><span class=\"pln\">get</span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}.</span><span class=\"kwd\">class</span><span class=\"pun\">,</span><span class=\"pln\"> id</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">PageEntity</span><span class=\"pun\">&lt;</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}&gt;</span><span class=\"pln\"> query</span><span class=\"pun\">(</span><span class=\"typ\">BaseDto</span><span class=\"pln\"> baseDto</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> hql </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\" select distinct $!{domain} from $!{domainName} $!{domain} where 1=1 \"</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Map</span><span class=\"pln\"> params </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">Object</span><span class=\"pun\">&gt;();</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        $</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}</span><span class=\"typ\">Dto</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">}</span><span class=\"typ\">Dto</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}</span><span class=\"typ\">Dto</span><span class=\"pun\">)</span><span class=\"pln\">baseDto</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        $</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">}</span><span class=\"typ\">Dto</span><span class=\"pun\">.</span><span class=\"pln\">get$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}();</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> page </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">}</span><span class=\"typ\">Dto</span><span class=\"pun\">.</span><span class=\"pln\">getPage</span><span class=\"pun\">();</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> pageSize </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">}</span><span class=\"typ\">Dto</span><span class=\"pun\">.</span><span class=\"pln\">getPageSize</span><span class=\"pun\">();</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">List</span><span class=\"pln\"> list </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">}</span><span class=\"typ\">Dao</span><span class=\"pun\">.</span><span class=\"pln\">query</span><span class=\"pun\">(</span><span class=\"pln\">hql</span><span class=\"pun\">,</span><span class=\"pln\">params</span><span class=\"pun\">,</span><span class=\"pln\">page</span><span class=\"pun\">,</span><span class=\"pln\">pageSize</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">long</span><span class=\"pln\"> count </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">!{</span><span class=\"pln\">domain</span><span class=\"pun\">}</span><span class=\"typ\">Dao</span><span class=\"pun\">.</span><span class=\"pln\">count</span><span class=\"pun\">(</span><span class=\"pln\">hql</span><span class=\"pun\">,</span><span class=\"pln\">params</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">PageEntity</span><span class=\"pun\">&lt;</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}&gt;</span><span class=\"pln\"> pe </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">PageEntity</span><span class=\"pun\">&lt;</span><span class=\"pln\">$</span><span class=\"pun\">!{</span><span class=\"pln\">domainName</span><span class=\"pun\">}&gt;();</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        pe</span><span class=\"pun\">.</span><span class=\"pln\">setCount</span><span class=\"pun\">(</span><span class=\"pln\">count</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        pe</span><span class=\"pun\">.</span><span class=\"pln\">setList</span><span class=\"pun\">(</span><span class=\"pln\">list</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> pe</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-u6A21u677Fu751Fu6210\"><a name=\"模板生成\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>模板生成</h2><p>接下来是生成模板的主函数：</p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">core</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">apache</span><span class=\"pun\">.</span><span class=\"pln\">velocity</span><span class=\"pun\">.</span><span class=\"typ\">Template</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">apache</span><span class=\"pun\">.</span><span class=\"pln\">velocity</span><span class=\"pun\">.</span><span class=\"typ\">VelocityContext</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">apache</span><span class=\"pun\">.</span><span class=\"pln\">velocity</span><span class=\"pun\">.</span><span class=\"pln\">app</span><span class=\"pun\">.</span><span class=\"typ\">Velocity</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">apache</span><span class=\"pun\">.</span><span class=\"pln\">velocity</span><span class=\"pun\">.</span><span class=\"pln\">app</span><span class=\"pun\">.</span><span class=\"typ\">VelocityEngine</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">io</span><span class=\"pun\">.</span><span class=\"typ\">BufferedWriter</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">io</span><span class=\"pun\">.</span><span class=\"typ\">File</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">io</span><span class=\"pun\">.</span><span class=\"typ\">FileOutputStream</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">io</span><span class=\"pun\">.</span><span class=\"typ\">OutputStreamWriter</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">HashMap</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Map</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Properties</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"com\">/**</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"com\"> * 开发者</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"com\"> * nickName:大黄蜂</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"com\"> * email:245655812@qq.com</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"com\"> * github:https://github.com/bigbeef</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"com\"> */</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Main</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> domainName </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"Articles\"</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"com\">//类名</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> packageName </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"com.cppba\"</span><span class=\"pun\">;</span><span class=\"com\">//类包</span></code></li><li class=\"L6\"><code class=\"lang-java\"></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> templateDir </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"\\\\src\\\\main\\\\webapp\\\\template\\\\\"</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> sourcePath </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"pln\">getProperty</span><span class=\"pun\">(</span><span class=\"str\">\"user.dir\"</span><span class=\"pun\">)+</span><span class=\"pln\">templateDir</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> resultDir </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"\\\\out\"</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> targetPath </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"pln\">getProperty</span><span class=\"pun\">(</span><span class=\"str\">\"user.dir\"</span><span class=\"pun\">)</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"pun\">+</span><span class=\"pln\"> resultDir </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"\\\\\"</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"pun\">+</span><span class=\"pln\"> packageName</span><span class=\"pun\">.</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">\".\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"\\\\\"</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> main</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> </span><span class=\"pun\">[]</span><span class=\"pln\">args</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">Exception</span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">Object</span><span class=\"pun\">&gt;</span><span class=\"pln\"> map </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">();</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        map</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"str\">\"DaoTemplate.java\"</span><span class=\"pun\">,</span><span class=\"str\">\"dao/\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> domainName </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"Dao.java\"</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        map</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"str\">\"ServiceTemplate.java\"</span><span class=\"pun\">,</span><span class=\"str\">\"service/\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> domainName </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"Service.java\"</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        map</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"str\">\"ServiceImplTemplate.java\"</span><span class=\"pun\">,</span><span class=\"str\">\"service/impl/\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> domainName </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"ServiceImpl.java\"</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        map</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"str\">\"DtoTemplate.java\"</span><span class=\"pun\">,</span><span class=\"str\">\"dto/\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> domainName </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"Dto.java\"</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> templateFile</span><span class=\"pun\">:</span><span class=\"pln\">map</span><span class=\"pun\">.</span><span class=\"pln\">keySet</span><span class=\"pun\">()){</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">String</span><span class=\"pln\"> targetFile </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pun\">)</span><span class=\"pln\"> map</span><span class=\"pun\">.</span><span class=\"pln\">get</span><span class=\"pun\">(</span><span class=\"pln\">templateFile</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">Properties</span><span class=\"pln\"> pro </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Properties</span><span class=\"pun\">();</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">            pro</span><span class=\"pun\">.</span><span class=\"pln\">setProperty</span><span class=\"pun\">(</span><span class=\"typ\">Velocity</span><span class=\"pun\">.</span><span class=\"pln\">OUTPUT_ENCODING</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"UTF-8\"</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">            pro</span><span class=\"pun\">.</span><span class=\"pln\">setProperty</span><span class=\"pun\">(</span><span class=\"typ\">Velocity</span><span class=\"pun\">.</span><span class=\"pln\">INPUT_ENCODING</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"UTF-8\"</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">            pro</span><span class=\"pun\">.</span><span class=\"pln\">setProperty</span><span class=\"pun\">(</span><span class=\"typ\">Velocity</span><span class=\"pun\">.</span><span class=\"pln\">FILE_RESOURCE_LOADER_PATH</span><span class=\"pun\">,</span><span class=\"pln\"> sourcePath</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">VelocityEngine</span><span class=\"pln\"> ve </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">VelocityEngine</span><span class=\"pun\">(</span><span class=\"pln\">pro</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">VelocityContext</span><span class=\"pln\"> context </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">VelocityContext</span><span class=\"pun\">();</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">            context</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"str\">\"domainName\"</span><span class=\"pun\">,</span><span class=\"pln\">domainName</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">            context</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"str\">\"packageName\"</span><span class=\"pun\">,</span><span class=\"pln\">packageName</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">Template</span><span class=\"pln\"> t </span><span class=\"pun\">=</span><span class=\"pln\"> ve</span><span class=\"pun\">.</span><span class=\"pln\">getTemplate</span><span class=\"pun\">(</span><span class=\"pln\">templateFile</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"UTF-8\"</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">File</span><span class=\"pln\"> file </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">File</span><span class=\"pun\">(</span><span class=\"pln\">targetPath</span><span class=\"pun\">,</span><span class=\"pln\"> targetFile</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(!</span><span class=\"pln\">file</span><span class=\"pun\">.</span><span class=\"pln\">getParentFile</span><span class=\"pun\">().</span><span class=\"pln\">exists</span><span class=\"pun\">())</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">                file</span><span class=\"pun\">.</span><span class=\"pln\">getParentFile</span><span class=\"pun\">().</span><span class=\"pln\">mkdirs</span><span class=\"pun\">();</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(!</span><span class=\"pln\">file</span><span class=\"pun\">.</span><span class=\"pln\">exists</span><span class=\"pun\">())</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">                file</span><span class=\"pun\">.</span><span class=\"pln\">createNewFile</span><span class=\"pun\">();</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">FileOutputStream</span><span class=\"pln\"> outStream </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">FileOutputStream</span><span class=\"pun\">(</span><span class=\"pln\">file</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">OutputStreamWriter</span><span class=\"pln\"> writer </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">OutputStreamWriter</span><span class=\"pun\">(</span><span class=\"pln\">outStream</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">                    </span><span class=\"str\">\"UTF-8\"</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">BufferedWriter</span><span class=\"pln\"> sw </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">BufferedWriter</span><span class=\"pun\">(</span><span class=\"pln\">writer</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">            t</span><span class=\"pun\">.</span><span class=\"pln\">merge</span><span class=\"pun\">(</span><span class=\"pln\">context</span><span class=\"pun\">,</span><span class=\"pln\"> sw</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">            sw</span><span class=\"pun\">.</span><span class=\"pln\">flush</span><span class=\"pun\">();</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            sw</span><span class=\"pun\">.</span><span class=\"pln\">close</span><span class=\"pun\">();</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">            outStream</span><span class=\"pun\">.</span><span class=\"pln\">close</span><span class=\"pun\">();</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"pln\">out</span><span class=\"pun\">.</span><span class=\"pln\">println</span><span class=\"pun\">(</span><span class=\"str\">\"成功生成Java文件:\"</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">                    </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">targetPath </span><span class=\"pun\">+</span><span class=\"pln\"> targetFile</span><span class=\"pun\">).</span><span class=\"pln\">replaceAll</span><span class=\"pun\">(</span><span class=\"str\">\"/\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"\\\\\\\\\"</span><span class=\"pun\">));</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2--java-\"><a name=\"生成java文件\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>生成java文件</h2><p>我们可以修改domainName和packageName来修改我们的包名和类名，我们运行下看：</p>\n<p><img src=\"http://image.cppba.com/Image/article/8ddbb63b-71a4-428a-bc84-55db3195430b.png\" alt=\"\"></p>\n<p>我们看到生成成功，我们打开ArticlesServiceImpl.java看下：</p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">service</span><span class=\"pun\">.</span><span class=\"pln\">impl</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">core</span><span class=\"pun\">.</span><span class=\"pln\">bean</span><span class=\"pun\">.</span><span class=\"typ\">PageEntity</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">dao</span><span class=\"pun\">.</span><span class=\"typ\">ArticlesDao</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">dto</span><span class=\"pun\">.</span><span class=\"typ\">ArticlesDto</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">dto</span><span class=\"pun\">.</span><span class=\"typ\">BaseDto</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">entity</span><span class=\"pun\">.</span><span class=\"typ\">Articles</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">service</span><span class=\"pun\">.</span><span class=\"typ\">ArticlesService</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">stereotype</span><span class=\"pun\">.</span><span class=\"typ\">Service</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">transaction</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Transactional</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> javax</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Resource</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">HashMap</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">List</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Map</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Objects</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"com\">/**</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"com\"> * 开发者</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"com\"> * nickName:大黄蜂</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"com\"> * email:245655812@qq.com</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"com\"> * github:https://github.com/bigbeef</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"com\"> * velocity模板生成 cppba-codeTemplate</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"com\"> */</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"lit\">@Service</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"lit\">@Transactional</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">ArticlesServiceImpl</span><span class=\"pln\"> </span><span class=\"kwd\">implements</span><span class=\"pln\"> </span><span class=\"typ\">ArticlesService</span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Resource</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">ArticlesDao</span><span class=\"pln\"> articlesDao</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> save</span><span class=\"pun\">(</span><span class=\"typ\">Articles</span><span class=\"pln\"> articles</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        articlesDao</span><span class=\"pun\">.</span><span class=\"pln\">save</span><span class=\"pun\">(</span><span class=\"pln\">articles</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code class=\"lang-java\"></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"kwd\">delete</span><span class=\"pun\">(</span><span class=\"typ\">Articles</span><span class=\"pln\"> articles</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        articlesDao</span><span class=\"pun\">.</span><span class=\"kwd\">delete</span><span class=\"pun\">(</span><span class=\"pln\">articles</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> update</span><span class=\"pun\">(</span><span class=\"typ\">Articles</span><span class=\"pln\"> articles</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        articlesDao</span><span class=\"pun\">.</span><span class=\"pln\">update</span><span class=\"pun\">(</span><span class=\"pln\">articles</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code class=\"lang-java\"></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">Articles</span><span class=\"pln\"> findById</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> id</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Articles</span><span class=\"pun\">)</span><span class=\"pln\"> articlesDao</span><span class=\"pun\">.</span><span class=\"pln\">get</span><span class=\"pun\">(</span><span class=\"typ\">Articles</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">,</span><span class=\"pln\"> id</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">PageEntity</span><span class=\"pun\">&lt;</span><span class=\"typ\">Articles</span><span class=\"pun\">&gt;</span><span class=\"pln\"> query</span><span class=\"pun\">(</span><span class=\"typ\">BaseDto</span><span class=\"pln\"> baseDto</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> hql </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\" select distinct articles from Articles articles where 1=1 \"</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Map</span><span class=\"pln\"> params </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">Object</span><span class=\"pun\">&gt;();</span></code></li><li class=\"L4\"><code class=\"lang-java\"></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">ArticlesDto</span><span class=\"pln\"> articlesDto </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">ArticlesDto</span><span class=\"pun\">)</span><span class=\"pln\">baseDto</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Articles</span><span class=\"pln\"> articles </span><span class=\"pun\">=</span><span class=\"pln\"> articlesDto</span><span class=\"pun\">.</span><span class=\"pln\">getArticles</span><span class=\"pun\">();</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> page </span><span class=\"pun\">=</span><span class=\"pln\"> articlesDto</span><span class=\"pun\">.</span><span class=\"pln\">getPage</span><span class=\"pun\">();</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> pageSize </span><span class=\"pun\">=</span><span class=\"pln\"> articlesDto</span><span class=\"pun\">.</span><span class=\"pln\">getPageSize</span><span class=\"pun\">();</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">List</span><span class=\"pln\"> list </span><span class=\"pun\">=</span><span class=\"pln\"> articlesDao</span><span class=\"pun\">.</span><span class=\"pln\">query</span><span class=\"pun\">(</span><span class=\"pln\">hql</span><span class=\"pun\">,</span><span class=\"pln\">params</span><span class=\"pun\">,</span><span class=\"pln\">page</span><span class=\"pun\">,</span><span class=\"pln\">pageSize</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">long</span><span class=\"pln\"> count </span><span class=\"pun\">=</span><span class=\"pln\"> articlesDao</span><span class=\"pun\">.</span><span class=\"pln\">count</span><span class=\"pun\">(</span><span class=\"pln\">hql</span><span class=\"pun\">,</span><span class=\"pln\">params</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">PageEntity</span><span class=\"pun\">&lt;</span><span class=\"typ\">Articles</span><span class=\"pun\">&gt;</span><span class=\"pln\"> pe </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">PageEntity</span><span class=\"pun\">&lt;</span><span class=\"typ\">Articles</span><span class=\"pun\">&gt;();</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        pe</span><span class=\"pun\">.</span><span class=\"pln\">setCount</span><span class=\"pun\">(</span><span class=\"pln\">count</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        pe</span><span class=\"pun\">.</span><span class=\"pln\">setList</span><span class=\"pun\">(</span><span class=\"pln\">list</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> pe</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<p>生成成功，我们拷贝到cppba-web中可完美运行！</p>\n<blockquote>\n<p>参考项目：<a href=\"https://github.com/bigbeef/cppba-codeTemplate\">https://github.com/bigbeef/cppba-codeTemplate</a><br>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://www.cppba.com\">http://www.cppba.com</a></p>\n</blockquote>\n</div>'),(11,'2016-08-03 03:30:39',0,1,7,'java善假于物（三）：quartz定时器融合spring','在spring的项目开发中，我们经常会用到定时器，虽然java本身提供了定时器，但是我为大家推荐一个更强的的作业调度框架：quartz，接下来教大家怎么利用spring全程注解的方式配置quartz','## 前言\n在spring的项目开发中，我们经常会用到定时器，虽然java本身提供了定时器，但是我为大家推荐一个更强的的作业调度框架：quartz，接下来教大家怎么利用spring全程注解的方式配置quartz\n\n## 1.maven配置\n```xml\n<!--quartz定时器-->\n<dependency>\n	<groupId>org.quartz-scheduler</groupId>\n	<artifactId>quartz</artifactId>\n	<version>2.2.3</version>\n</dependency>\n```\n\n## 2.spring的注解配置文件QuartzConfiguration.java\n```java\npackage com.qingcheng.club.configuration;\n\nimport com.qingcheng.club.quartz.LoseClassQuartz;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.scheduling.quartz.CronTriggerFactoryBean;\nimport org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean;\nimport org.springframework.scheduling.quartz.SchedulerFactoryBean;\n\n@Configuration\npublic class QuartzConfiguration {\n    \n    @Autowired\n    private LoseClassQuartz loseClassQuartz;\n    \n    @Bean\n    public MethodInvokingJobDetailFactoryBean jobDetail(){\n        MethodInvokingJobDetailFactoryBean methodInvokingJobDetailFactoryBean = new MethodInvokingJobDetailFactoryBean();\n        methodInvokingJobDetailFactoryBean.setTargetObject(loseClassQuartz);\n        methodInvokingJobDetailFactoryBean.setTargetMethod(\"doJob\");\n        return methodInvokingJobDetailFactoryBean;\n    }\n    \n    @Bean\n    public CronTriggerFactoryBean cronTriggerBean(){\n        CronTriggerFactoryBean cronTriggerFactoryBean = new CronTriggerFactoryBean();\n        cronTriggerFactoryBean.setJobDetail(jobDetail().getObject());\n        //每5秒执行一次\n        //cronTriggerFactoryBean.setCronExpression(\"0/5 * * * * ?\");\n        //每秒执行一次，这个表达式很重要，任务调度执行频率\n        cronTriggerFactoryBean.setCronExpression(\"* * * * * ?\");\n        return cronTriggerFactoryBean;\n    }\n    \n    @Bean\n    public SchedulerFactoryBean trigger(){\n        SchedulerFactoryBean schedulerFactoryBean = new SchedulerFactoryBean();\n        schedulerFactoryBean.setTriggers(cronTriggerBean().getObject());\n        return schedulerFactoryBean;\n    }\n}\n```  \n\n##  3.测试任务LoseClassQuartz.java\n```java\npackage com.qingcheng.club.quartz;\n\nimport com.qingcheng.service.BookService;\nimport com.qingcheng.util.Globals;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.stereotype.Component;\n\nimport javax.annotation.Resource;\nimport java.util.Date;\nimport java.util.List;\n\n@Component(\"LoseClassQuartz\")\npublic class LoseClassQuartz{\n    \n    private static Logger logger = LoggerFactory.getLogger(LoseClassQuartz.class);\n\n    public void doJob(){\n        SimpleDateFormat sdfyyyyMMddHHmmss = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        String now = sdfyyyyMMddHHmmss.format(new Date());\n        System.out.println(\"time:\"+now);\n    }\n}\n```\n\n## 4.运行结果：\n\n![](http://image.cppba.com/Image/article/fcd6dfa4-6170-4ec6-9180-02c717efd8f3.png)\n\n运行成功！\n\n> github地址：https://github.com/bigbeef\n> 个人博客：http://www.cppba.com','<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><h2 id=\"h2-u524Du8A00\"><a name=\"前言\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>前言</h2><p>在spring的项目开发中，我们经常会用到定时器，虽然java本身提供了定时器，但是我为大家推荐一个更强的的作业调度框架：quartz，接下来教大家怎么利用spring全程注解的方式配置quartz</p>\n<h2 id=\"h2-1-maven-\"><a name=\"1.maven配置\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.maven配置</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-xml\"><span class=\"com\">&lt;!--quartz定时器--&gt;</span></code></li><li class=\"L1\"><code class=\"lang-xml\"><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L2\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.quartz-scheduler</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L3\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">quartz</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L4\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;version&gt;</span><span class=\"pln\">2.2.3</span><span class=\"tag\">&lt;/version&gt;</span></code></li><li class=\"L5\"><code class=\"lang-xml\"><span class=\"tag\">&lt;/dependency&gt;</span></code></li></ol></pre>\n<h2 id=\"h2-2-spring-quartzconfiguration-java\"><a name=\"2.spring的注解配置文件QuartzConfiguration.java\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.spring的注解配置文件QuartzConfiguration.java</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">qingcheng</span><span class=\"pun\">.</span><span class=\"pln\">club</span><span class=\"pun\">.</span><span class=\"pln\">configuration</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">qingcheng</span><span class=\"pun\">.</span><span class=\"pln\">club</span><span class=\"pun\">.</span><span class=\"pln\">quartz</span><span class=\"pun\">.</span><span class=\"typ\">LoseClassQuartz</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">beans</span><span class=\"pun\">.</span><span class=\"pln\">factory</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Autowired</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Bean</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Configuration</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">scheduling</span><span class=\"pun\">.</span><span class=\"pln\">quartz</span><span class=\"pun\">.</span><span class=\"typ\">CronTriggerFactoryBean</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">scheduling</span><span class=\"pun\">.</span><span class=\"pln\">quartz</span><span class=\"pun\">.</span><span class=\"typ\">MethodInvokingJobDetailFactoryBean</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">scheduling</span><span class=\"pun\">.</span><span class=\"pln\">quartz</span><span class=\"pun\">.</span><span class=\"typ\">SchedulerFactoryBean</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"lit\">@Configuration</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">QuartzConfiguration</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Autowired</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">LoseClassQuartz</span><span class=\"pln\"> loseClassQuartz</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Bean</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">MethodInvokingJobDetailFactoryBean</span><span class=\"pln\"> jobDetail</span><span class=\"pun\">(){</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">MethodInvokingJobDetailFactoryBean</span><span class=\"pln\"> methodInvokingJobDetailFactoryBean </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">MethodInvokingJobDetailFactoryBean</span><span class=\"pun\">();</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        methodInvokingJobDetailFactoryBean</span><span class=\"pun\">.</span><span class=\"pln\">setTargetObject</span><span class=\"pun\">(</span><span class=\"pln\">loseClassQuartz</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        methodInvokingJobDetailFactoryBean</span><span class=\"pun\">.</span><span class=\"pln\">setTargetMethod</span><span class=\"pun\">(</span><span class=\"str\">\"doJob\"</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> methodInvokingJobDetailFactoryBean</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Bean</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">CronTriggerFactoryBean</span><span class=\"pln\"> cronTriggerBean</span><span class=\"pun\">(){</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">CronTriggerFactoryBean</span><span class=\"pln\"> cronTriggerFactoryBean </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">CronTriggerFactoryBean</span><span class=\"pun\">();</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        cronTriggerFactoryBean</span><span class=\"pun\">.</span><span class=\"pln\">setJobDetail</span><span class=\"pun\">(</span><span class=\"pln\">jobDetail</span><span class=\"pun\">().</span><span class=\"pln\">getObject</span><span class=\"pun\">());</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"com\">//每5秒执行一次</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"com\">//cronTriggerFactoryBean.setCronExpression(\"0/5 * * * * ?\");</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"com\">//每秒执行一次，这个表达式很重要，任务调度执行频率</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        cronTriggerFactoryBean</span><span class=\"pun\">.</span><span class=\"pln\">setCronExpression</span><span class=\"pun\">(</span><span class=\"str\">\"* * * * * ?\"</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> cronTriggerFactoryBean</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code class=\"lang-java\"></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Bean</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">SchedulerFactoryBean</span><span class=\"pln\"> trigger</span><span class=\"pun\">(){</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">SchedulerFactoryBean</span><span class=\"pln\"> schedulerFactoryBean </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">SchedulerFactoryBean</span><span class=\"pun\">();</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        schedulerFactoryBean</span><span class=\"pun\">.</span><span class=\"pln\">setTriggers</span><span class=\"pun\">(</span><span class=\"pln\">cronTriggerBean</span><span class=\"pun\">().</span><span class=\"pln\">getObject</span><span class=\"pun\">());</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> schedulerFactoryBean</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-3-loseclassquartz-java\"><a name=\"3.测试任务LoseClassQuartz.java\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3.测试任务LoseClassQuartz.java</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">qingcheng</span><span class=\"pun\">.</span><span class=\"pln\">club</span><span class=\"pun\">.</span><span class=\"pln\">quartz</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">qingcheng</span><span class=\"pun\">.</span><span class=\"pln\">service</span><span class=\"pun\">.</span><span class=\"typ\">BookService</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">qingcheng</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Globals</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">slf4j</span><span class=\"pun\">.</span><span class=\"typ\">Logger</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">slf4j</span><span class=\"pun\">.</span><span class=\"typ\">LoggerFactory</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">stereotype</span><span class=\"pun\">.</span><span class=\"typ\">Component</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> javax</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Resource</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Date</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">List</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"lit\">@Component</span><span class=\"pun\">(</span><span class=\"str\">\"LoseClassQuartz\"</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">LoseClassQuartz</span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-java\"></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">Logger</span><span class=\"pln\"> logger </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">LoggerFactory</span><span class=\"pun\">.</span><span class=\"pln\">getLogger</span><span class=\"pun\">(</span><span class=\"typ\">LoseClassQuartz</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> doJob</span><span class=\"pun\">(){</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">SimpleDateFormat</span><span class=\"pln\"> sdfyyyyMMddHHmmss </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">SimpleDateFormat</span><span class=\"pun\">(</span><span class=\"str\">\"yyyy-MM-dd HH:mm:ss\"</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> now </span><span class=\"pun\">=</span><span class=\"pln\"> sdfyyyyMMddHHmmss</span><span class=\"pun\">.</span><span class=\"pln\">format</span><span class=\"pun\">(</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Date</span><span class=\"pun\">());</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"pln\">out</span><span class=\"pun\">.</span><span class=\"pln\">println</span><span class=\"pun\">(</span><span class=\"str\">\"time:\"</span><span class=\"pun\">+</span><span class=\"pln\">now</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-4-\"><a name=\"4.运行结果：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4.运行结果：</h2><p><img src=\"http://image.cppba.com/Image/article/fcd6dfa4-6170-4ec6-9180-02c717efd8f3.png\" alt=\"\"></p>\n<p>运行成功！</p>\n<blockquote>\n<p>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://www.cppba.com\">http://www.cppba.com</a></p>\n</blockquote>\n</div>');
/*!40000 ALTER TABLE `articles` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `permission`
--

DROP TABLE IF EXISTS `permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `permission` (
  `permission_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `add_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `delete_status` int(11) DEFAULT '0',
  `role_id` bigint(20) DEFAULT NULL,
  `token` varchar(32) DEFAULT NULL,
  `url` varchar(64) DEFAULT NULL COMMENT '资源名',
  `description` varchar(32) DEFAULT NULL COMMENT '权限说明',
  PRIMARY KEY (`permission_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `permission`
--

LOCK TABLES `permission` WRITE;
/*!40000 ALTER TABLE `permission` DISABLE KEYS */;
INSERT INTO `permission` VALUES (1,'2016-07-15 01:55:37',0,1,NULL,'blogger:create',NULL);
/*!40000 ALTER TABLE `permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `role`
--

DROP TABLE IF EXISTS `role`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `role` (
  `role_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `add_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `delete_status` int(11) DEFAULT '0',
  `name` varchar(16) DEFAULT NULL COMMENT '角色名称',
  `description` varchar(16) DEFAULT NULL COMMENT '角色说明',
  PRIMARY KEY (`role_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `role`
--

LOCK TABLES `role` WRITE;
/*!40000 ALTER TABLE `role` DISABLE KEYS */;
INSERT INTO `role` VALUES (1,'2016-07-15 05:55:27',0,'blogger','博主');
/*!40000 ALTER TABLE `role` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `user_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `add_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `delete_status` int(11) DEFAULT '0',
  `user_name` varchar(16) DEFAULT NULL COMMENT '账号',
  `password` varchar(32) DEFAULT NULL COMMENT '密码',
  `nick_name` varchar(16) DEFAULT NULL COMMENT '昵称',
  `remark` text COMMENT '个人简介',
  `title` varchar(64) DEFAULT NULL COMMENT '页面标题',
  `keyword` varchar(128) DEFAULT NULL COMMENT '关键字',
  `description` varchar(128) DEFAULT NULL COMMENT '描述',
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES (1,'2016-07-18 14:36:46',0,'admin','21232f297a57a5a743894a0e4a801fc3','大黄蜂','大黄蜂','大黄蜂的独立博客','大黄蜂,大黄蜂coder,java技术博客,大黄蜂的独立博客','大黄蜂,大黄蜂coder,java技术博客,大黄蜂的独立博客'),(2,'2016-07-18 14:37:09',0,'test','098f6bcd4621d373cade4e832627b4f6','test','test',NULL,NULL,NULL);
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user_role`
--

DROP TABLE IF EXISTS `user_role`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_role` (
  `user_role_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `add_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `delete_status` int(11) DEFAULT '0',
  `user_id` bigint(20) DEFAULT NULL,
  `role_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`user_role_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user_role`
--

LOCK TABLES `user_role` WRITE;
/*!40000 ALTER TABLE `user_role` DISABLE KEYS */;
INSERT INTO `user_role` VALUES (1,'2016-07-15 01:55:21',0,1,1);
/*!40000 ALTER TABLE `user_role` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-08-04 13:46:04
