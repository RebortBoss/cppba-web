/*
Navicat MySQL Data Transfer

Source Server         : bn.cppba.com
Source Server Version : 50713
Source Host           : bn.cppba.com:3306
Source Database       : cppba

Target Server Type    : MYSQL
Target Server Version : 50713
File Encoding         : 65001

Date: 2016-07-30 00:04:42
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for article_class
-- ----------------------------
DROP TABLE IF EXISTS `article_class`;
CREATE TABLE `article_class` (
  `article_class_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `add_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `delete_status` int(11) DEFAULT '0',
  `user_id` bigint(20) DEFAULT NULL COMMENT '用户编号',
  `name` varchar(16) DEFAULT NULL COMMENT '分类名',
  `sort_id` int(11) DEFAULT '0' COMMENT '编号',
  PRIMARY KEY (`article_class_id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of article_class
-- ----------------------------
INSERT INTO `article_class` VALUES ('1', '2016-07-14 14:48:23', '0', '1', 'spring', '0');
INSERT INTO `article_class` VALUES ('5', '2016-07-14 16:14:16', '0', '1', 'centos', '1');
INSERT INTO `article_class` VALUES ('7', '2016-07-21 20:56:51', '0', '1', 'java善假于物', '3');
INSERT INTO `article_class` VALUES ('8', '2016-07-28 16:56:52', '0', '1', 'redis', '2');

-- ----------------------------
-- Table structure for articles
-- ----------------------------
DROP TABLE IF EXISTS `articles`;
CREATE TABLE `articles` (
  `article_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `add_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `delete_status` int(11) DEFAULT '0',
  `user_id` bigint(20) DEFAULT NULL COMMENT '用户编号',
  `article_class_id` bigint(20) DEFAULT NULL COMMENT '文章分类编号',
  `title` varchar(128) DEFAULT NULL COMMENT '标题',
  `abstracts` text COMMENT '简介(显示在列表中)',
  `content` text COMMENT '内容',
  `html` text COMMENT 'markdown对应的html文件',
  PRIMARY KEY (`article_id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of articles
-- ----------------------------
INSERT INTO `articles` VALUES ('1', '2016-07-14 14:48:28', '0', '1', '1', 'spring-boot使用教程(一)：让程序跑起来', 'spring-boot是由[Pivotal](http://gopivotal.com/)团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Boot致力于在蓬勃发展的快速应用开发领域（rapid application development）成为领导者。', '## 简介\nspring-boot是由[Pivotal](http://gopivotal.com/)团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Boot致力于在蓬勃发展的快速应用开发领域（rapid application development）成为领导者。\n\n##文件结构\n\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/672c18ed-cb3c-477f-8cb0-d4ef387a7082.png)\n\n## 1.maven的pom.xml配置\n````maven\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.cppbba</groupId>\n    <artifactId>cppba-spring-boot</artifactId>\n    <packaging>war</packaging>\n    <version>1.0.0</version>\n\n    <name>cppba-spring-boot Maven Webapp</name>\n    <url>http://maven.apache.org</url>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>1.3.6.RELEASE</version>\n    </parent>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <jdk.version>1.7</jdk.version>\n        <spring.version>4.3.0.RELEASE</spring.version>\n        <hibernate.version>4.3.11.Final</hibernate.version>\n    </properties>\n\n    <dependencies>\n        <!--spring-->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-jdbc</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-orm</artifactId>\n        </dependency>\n        <!--mysql-->\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n        </dependency>\n        <!-- hibernate-->\n        <dependency>\n            <groupId>org.hibernate</groupId>\n            <artifactId>hibernate-entitymanager</artifactId>\n            <version>${hibernate.version}</version>\n        </dependency>\n        <!--druid-->\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>druid</artifactId>\n            <version>1.0.20</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <finalName>cppba-spring-boot</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n````\n## 2.创建Application.java\n````java\npackage com.cppba;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.core.env.Environment;\n\nimport java.net.UnknownHostException;\n\n// same as @Configuration @EnableAutoConfiguration @ComponentScan\n@SpringBootApplication\npublic class Application {\n    public static void main(String[] args) throws UnknownHostException {\n        SpringApplication app = new SpringApplication(Application.class);\n        Environment environment = app.run(args).getEnvironment();\n    }\n}\n````\n\n##3.创建DatabaseConfiguration.java\n````java\npackage com.cppba.config;\n\nimport com.alibaba.druid.pool.DruidDataSource;\nimport org.springframework.boot.bind.RelaxedPropertyResolver;\nimport org.springframework.context.ApplicationContextException;\nimport org.springframework.context.EnvironmentAware;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.env.Environment;\nimport org.springframework.orm.hibernate4.HibernateTransactionManager;\nimport org.springframework.orm.hibernate4.LocalSessionFactoryBean;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\nimport org.springframework.util.StringUtils;\n\nimport javax.sql.DataSource;\nimport java.sql.SQLException;\nimport java.util.Arrays;\nimport java.util.Properties;\n\n@Configuration\n@EnableTransactionManagement\npublic class DatabaseConfiguration implements EnvironmentAware {\n\n    private Environment environment;\n    private RelaxedPropertyResolver datasourcePropertyResolver;\n\n    //从application.yml中读取资源\n    @Override\n    public void setEnvironment(Environment environment) {\n        this.environment = environment;\n        this.datasourcePropertyResolver = new RelaxedPropertyResolver(environment,\n                \"spring.datasource.\");\n    }\n\n    //datasource\n    @Bean(initMethod = \"init\", destroyMethod = \"close\")\n    public DataSource dataSource() throws SQLException {\n        if (StringUtils.isEmpty(datasourcePropertyResolver.getProperty(\"url\"))) {\n            System.out.println(\"Your database connection pool configuration is incorrect!\" +\n                    \" Please check your Spring profile, current profiles are:\"+\n            Arrays.toString(environment.getActiveProfiles()));\n            throw new ApplicationContextException(\n                    \"Database connection pool is not configured correctly\");\n        }\n        DruidDataSource druidDataSource = new DruidDataSource();\n        druidDataSource.setUrl(datasourcePropertyResolver.getProperty(\"url\"));\n        druidDataSource.setUsername(datasourcePropertyResolver\n                .getProperty(\"username\"));\n        druidDataSource.setPassword(datasourcePropertyResolver\n                .getProperty(\"password\"));\n        druidDataSource.setInitialSize(1);\n        druidDataSource.setMinIdle(1);\n        druidDataSource.setMaxActive(20);\n        druidDataSource.setMaxWait(60000);\n        druidDataSource.setTimeBetweenEvictionRunsMillis(60000);\n        druidDataSource.setMinEvictableIdleTimeMillis(300000);\n        druidDataSource.setValidationQuery(\"SELECT　\'x\'\");\n        druidDataSource.setTestWhileIdle(true);\n        druidDataSource.setTestOnBorrow(false);\n        druidDataSource.setTestOnReturn(false);\n        return druidDataSource;\n    }\n\n    //sessionFactory\n    @Bean\n    public LocalSessionFactoryBean sessionFactory() throws SQLException{\n        LocalSessionFactoryBean localSessionFactoryBean = new LocalSessionFactoryBean();\n        localSessionFactoryBean.setDataSource(this.dataSource());\n        Properties properties1 = new Properties();\n        properties1.setProperty(\"hibernate.dialect\",\"org.hibernate.dialect.MySQL5Dialect\");\n        properties1.setProperty(\"hibernate.show_sql\",\"false\");\n        localSessionFactoryBean.setHibernateProperties(properties1);\n        localSessionFactoryBean.setPackagesToScan(\"*\");\n        return localSessionFactoryBean;\n    }\n\n    //txManager事务开启\n    @Bean\n    public HibernateTransactionManager txManager() throws SQLException {\n        HibernateTransactionManager hibernateTransactionManager = new HibernateTransactionManager();\n        hibernateTransactionManager.setSessionFactory(sessionFactory().getObject());\n        return hibernateTransactionManager;\n    }\n}\n````\n\n##4.创建CommonAction.java(这是一个测试类)\n````java\npackage com.cppba.web;\n\nimport org.hibernate.SQLQuery;\nimport org.hibernate.Session;\nimport org.hibernate.SessionFactory;\nimport org.springframework.transaction.annotation.Transactional;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport javax.annotation.Resource;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.util.List;\n\n@RestController\n@Transactional\npublic class CommonAction {\n\n    @Resource\n    private SessionFactory sessionFactory;\n\n    @RequestMapping(\"test\")\n    public void test(HttpServletResponse response){\n        Session session = sessionFactory.getCurrentSession();\n        SQLQuery sqlQuery = session.createSQLQuery(\"select * from user\");\n        List list = sqlQuery.list();\n        System.out.printf(list.size()+\"\");\n        try {\n            response.setContentType(\"application/json\");\n            response.setHeader(\"Cache-Control\", \"no-cache\");\n            response.setCharacterEncoding(\"UTF-8\");\n            response.getWriter().write(\"{\\\"msg\\\":\\\"调用成功\\\"}\");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n````\n\n##5.创建application.yml\n````json\nserver:\n    port: 8080\n    address: localhost\n\nspring:\n    datasource:\n        url: jdbc:mysql://localhost:3306/cppba\n        username: root\n        password: root\n````\n\n##6.启动项目\n我们点击启动按钮\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/60bfbf98-bc9b-4621-a5e2-41e7a6772658.png)\n\n控制台会打印如下内容：\n\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/baa0e47e-9ff6-43ea-839f-5f59de22b6cd.png)\n\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/734ab22a-cc2b-4a5e-acaa-e6e79792f5ca.png)\n\n启动成功\n接下来我们访问http://127.0.0.1:8080/test\n(我的CommonAction中RequestMapping(\"test\"),所以访问路径是test)\n\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/77eb1320-647c-4086-ab00-ea68bfed7eb0.png)\n\n到此spring-boot配置成功！\n\n>参考项目：https://github.com/bigbeef/cppba-spring-boot\n> github地址：https://github.com/bigbeef\n> 个人博客：http://blog.cppba.com', '<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><h2 id=\"h2-u7B80u4ECB\"><a name=\"简介\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>简介</h2><p>spring-boot是由<a href=\"http://gopivotal.com/\">Pivotal</a>团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Boot致力于在蓬勃发展的快速应用开发领域（rapid application development）成为领导者。</p>\n<h2 id=\"h2-u6587u4EF6u7ED3u6784\"><a name=\"文件结构\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>文件结构</h2><p><img src=\"http://image.cppba.com/Image/article/672c18ed-cb3c-477f-8cb0-d4ef387a7082.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<h2 id=\"h2-1-maven-pom-xml-\"><a name=\"1.maven的pom.xml配置\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.maven的pom.xml配置</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-maven\"><span class=\"tag\">&lt;project</span><span class=\"pln\"> </span><span class=\"atn\">xmlns</span><span class=\"pun\">=</span><span class=\"atv\">\"http://maven.apache.org/POM/4.0.0\"</span><span class=\"pln\"> </span><span class=\"atn\">xmlns:xsi</span><span class=\"pun\">=</span><span class=\"atv\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></code></li><li class=\"L1\"><code class=\"lang-maven\"><span class=\"pln\">         </span><span class=\"atn\">xsi:schemaLocation</span><span class=\"pun\">=</span><span class=\"atv\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"</span><span class=\"tag\">&gt;</span></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;modelVersion&gt;</span><span class=\"pln\">4.0.0</span><span class=\"tag\">&lt;/modelVersion&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"></code></li><li class=\"L4\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">com.cppbba</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">cppba-spring-boot</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;packaging&gt;</span><span class=\"pln\">war</span><span class=\"tag\">&lt;/packaging&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;version&gt;</span><span class=\"pln\">1.0.0</span><span class=\"tag\">&lt;/version&gt;</span></code></li><li class=\"L8\"><code class=\"lang-maven\"></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;name&gt;</span><span class=\"pln\">cppba-spring-boot Maven Webapp</span><span class=\"tag\">&lt;/name&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;url&gt;</span><span class=\"pln\">http://maven.apache.org</span><span class=\"tag\">&lt;/url&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;parent&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.springframework.boot</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L4\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">spring-boot-starter-parent</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;version&gt;</span><span class=\"pln\">1.3.6.RELEASE</span><span class=\"tag\">&lt;/version&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;/parent&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"></code></li><li class=\"L8\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;properties&gt;</span></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;project.build.sourceEncoding&gt;</span><span class=\"pln\">UTF-8</span><span class=\"tag\">&lt;/project.build.sourceEncoding&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;jdk.version&gt;</span><span class=\"pln\">1.7</span><span class=\"tag\">&lt;/jdk.version&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;spring.version&gt;</span><span class=\"pln\">4.3.0.RELEASE</span><span class=\"tag\">&lt;/spring.version&gt;</span></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;hibernate.version&gt;</span><span class=\"pln\">4.3.11.Final</span><span class=\"tag\">&lt;/hibernate.version&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;/properties&gt;</span></code></li><li class=\"L4\"><code class=\"lang-maven\"></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;dependencies&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"com\">&lt;!--spring--&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L8\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.springframework.boot</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">spring-boot-starter-web</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.springframework.boot</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">spring-boot-starter-test</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L4\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.springframework.boot</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">spring-boot-starter-jdbc</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L8\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.springframework</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">spring-orm</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"com\">&lt;!--mysql--&gt;</span></code></li><li class=\"L4\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">mysql</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">mysql-connector-java</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L8\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"com\">&lt;!-- hibernate--&gt;</span></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.hibernate</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">hibernate-entitymanager</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;version&gt;</span><span class=\"pln\">${hibernate.version}</span><span class=\"tag\">&lt;/version&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L4\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"com\">&lt;!--druid--&gt;</span></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;dependency&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">com.alibaba</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">druid</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L8\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;version&gt;</span><span class=\"pln\">1.0.20</span><span class=\"tag\">&lt;/version&gt;</span></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/dependency&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;/dependencies&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"></code></li><li class=\"L2\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;build&gt;</span></code></li><li class=\"L3\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;finalName&gt;</span><span class=\"pln\">cppba-spring-boot</span><span class=\"tag\">&lt;/finalName&gt;</span></code></li><li class=\"L4\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;plugins&gt;</span></code></li><li class=\"L5\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;plugin&gt;</span></code></li><li class=\"L6\"><code class=\"lang-maven\"><span class=\"pln\">                </span><span class=\"tag\">&lt;groupId&gt;</span><span class=\"pln\">org.springframework.boot</span><span class=\"tag\">&lt;/groupId&gt;</span></code></li><li class=\"L7\"><code class=\"lang-maven\"><span class=\"pln\">                </span><span class=\"tag\">&lt;artifactId&gt;</span><span class=\"pln\">spring-boot-maven-plugin</span><span class=\"tag\">&lt;/artifactId&gt;</span></code></li><li class=\"L8\"><code class=\"lang-maven\"><span class=\"pln\">            </span><span class=\"tag\">&lt;/plugin&gt;</span></code></li><li class=\"L9\"><code class=\"lang-maven\"><span class=\"pln\">        </span><span class=\"tag\">&lt;/plugins&gt;</span></code></li><li class=\"L0\"><code class=\"lang-maven\"><span class=\"pln\">    </span><span class=\"tag\">&lt;/build&gt;</span></code></li><li class=\"L1\"><code class=\"lang-maven\"><span class=\"tag\">&lt;/project&gt;</span></code></li></ol></pre>\n<h2 id=\"h2-2-application-java\"><a name=\"2.创建Application.java\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.创建Application.java</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">boot</span><span class=\"pun\">.</span><span class=\"typ\">SpringApplication</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">boot</span><span class=\"pun\">.</span><span class=\"pln\">autoconfigure</span><span class=\"pun\">.</span><span class=\"typ\">SpringBootApplication</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">core</span><span class=\"pun\">.</span><span class=\"pln\">env</span><span class=\"pun\">.</span><span class=\"typ\">Environment</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">net</span><span class=\"pun\">.</span><span class=\"typ\">UnknownHostException</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"com\">// same as @Configuration @EnableAutoConfiguration @ComponentScan</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"lit\">@SpringBootApplication</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Application</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> main</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pun\">[]</span><span class=\"pln\"> args</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">UnknownHostException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">SpringApplication</span><span class=\"pln\"> app </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">SpringApplication</span><span class=\"pun\">(</span><span class=\"typ\">Application</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Environment</span><span class=\"pln\"> environment </span><span class=\"pun\">=</span><span class=\"pln\"> app</span><span class=\"pun\">.</span><span class=\"pln\">run</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">).</span><span class=\"pln\">getEnvironment</span><span class=\"pun\">();</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-3-databaseconfiguration-java\"><a name=\"3.创建DatabaseConfiguration.java\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3.创建DatabaseConfiguration.java</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">config</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">alibaba</span><span class=\"pun\">.</span><span class=\"pln\">druid</span><span class=\"pun\">.</span><span class=\"pln\">pool</span><span class=\"pun\">.</span><span class=\"typ\">DruidDataSource</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">boot</span><span class=\"pun\">.</span><span class=\"pln\">bind</span><span class=\"pun\">.</span><span class=\"typ\">RelaxedPropertyResolver</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"typ\">ApplicationContextException</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"typ\">EnvironmentAware</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Bean</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Configuration</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">core</span><span class=\"pun\">.</span><span class=\"pln\">env</span><span class=\"pun\">.</span><span class=\"typ\">Environment</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">orm</span><span class=\"pun\">.</span><span class=\"pln\">hibernate4</span><span class=\"pun\">.</span><span class=\"typ\">HibernateTransactionManager</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">orm</span><span class=\"pun\">.</span><span class=\"pln\">hibernate4</span><span class=\"pun\">.</span><span class=\"typ\">LocalSessionFactoryBean</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">transaction</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">EnableTransactionManagement</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">StringUtils</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> javax</span><span class=\"pun\">.</span><span class=\"pln\">sql</span><span class=\"pun\">.</span><span class=\"typ\">DataSource</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">sql</span><span class=\"pun\">.</span><span class=\"typ\">SQLException</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Arrays</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Properties</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"lit\">@Configuration</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"lit\">@EnableTransactionManagement</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">DatabaseConfiguration</span><span class=\"pln\"> </span><span class=\"kwd\">implements</span><span class=\"pln\"> </span><span class=\"typ\">EnvironmentAware</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Environment</span><span class=\"pln\"> environment</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">RelaxedPropertyResolver</span><span class=\"pln\"> datasourcePropertyResolver</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//从application.yml中读取资源</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> setEnvironment</span><span class=\"pun\">(</span><span class=\"typ\">Environment</span><span class=\"pln\"> environment</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">environment </span><span class=\"pun\">=</span><span class=\"pln\"> environment</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">datasourcePropertyResolver </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RelaxedPropertyResolver</span><span class=\"pun\">(</span><span class=\"pln\">environment</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"str\">\"spring.datasource.\"</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//datasource</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Bean</span><span class=\"pun\">(</span><span class=\"pln\">initMethod </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"init\"</span><span class=\"pun\">,</span><span class=\"pln\"> destroyMethod </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"close\"</span><span class=\"pun\">)</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">DataSource</span><span class=\"pln\"> dataSource</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">StringUtils</span><span class=\"pun\">.</span><span class=\"pln\">isEmpty</span><span class=\"pun\">(</span><span class=\"pln\">datasourcePropertyResolver</span><span class=\"pun\">.</span><span class=\"pln\">getProperty</span><span class=\"pun\">(</span><span class=\"str\">\"url\"</span><span class=\"pun\">)))</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"pln\">out</span><span class=\"pun\">.</span><span class=\"pln\">println</span><span class=\"pun\">(</span><span class=\"str\">\"Your database connection pool configuration is incorrect!\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">                    </span><span class=\"str\">\" Please check your Spring profile, current profiles are:\"</span><span class=\"pun\">+</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"typ\">Arrays</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">(</span><span class=\"pln\">environment</span><span class=\"pun\">.</span><span class=\"pln\">getActiveProfiles</span><span class=\"pun\">()));</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ApplicationContextException</span><span class=\"pun\">(</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">                    </span><span class=\"str\">\"Database connection pool is not configured correctly\"</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">DruidDataSource</span><span class=\"pln\"> druidDataSource </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">DruidDataSource</span><span class=\"pun\">();</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setUrl</span><span class=\"pun\">(</span><span class=\"pln\">datasourcePropertyResolver</span><span class=\"pun\">.</span><span class=\"pln\">getProperty</span><span class=\"pun\">(</span><span class=\"str\">\"url\"</span><span class=\"pun\">));</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setUsername</span><span class=\"pun\">(</span><span class=\"pln\">datasourcePropertyResolver</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"pun\">.</span><span class=\"pln\">getProperty</span><span class=\"pun\">(</span><span class=\"str\">\"username\"</span><span class=\"pun\">));</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setPassword</span><span class=\"pun\">(</span><span class=\"pln\">datasourcePropertyResolver</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">                </span><span class=\"pun\">.</span><span class=\"pln\">getProperty</span><span class=\"pun\">(</span><span class=\"str\">\"password\"</span><span class=\"pun\">));</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setInitialSize</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setMinIdle</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setMaxActive</span><span class=\"pun\">(</span><span class=\"lit\">20</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setMaxWait</span><span class=\"pun\">(</span><span class=\"lit\">60000</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setTimeBetweenEvictionRunsMillis</span><span class=\"pun\">(</span><span class=\"lit\">60000</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setMinEvictableIdleTimeMillis</span><span class=\"pun\">(</span><span class=\"lit\">300000</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setValidationQuery</span><span class=\"pun\">(</span><span class=\"str\">\"SELECT　\'x\'\"</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setTestWhileIdle</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setTestOnBorrow</span><span class=\"pun\">(</span><span class=\"kwd\">false</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        druidDataSource</span><span class=\"pun\">.</span><span class=\"pln\">setTestOnReturn</span><span class=\"pun\">(</span><span class=\"kwd\">false</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> druidDataSource</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//sessionFactory</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Bean</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">LocalSessionFactoryBean</span><span class=\"pln\"> sessionFactory</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">LocalSessionFactoryBean</span><span class=\"pln\"> localSessionFactoryBean </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">LocalSessionFactoryBean</span><span class=\"pun\">();</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        localSessionFactoryBean</span><span class=\"pun\">.</span><span class=\"pln\">setDataSource</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">dataSource</span><span class=\"pun\">());</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Properties</span><span class=\"pln\"> properties1 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Properties</span><span class=\"pun\">();</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        properties1</span><span class=\"pun\">.</span><span class=\"pln\">setProperty</span><span class=\"pun\">(</span><span class=\"str\">\"hibernate.dialect\"</span><span class=\"pun\">,</span><span class=\"str\">\"org.hibernate.dialect.MySQL5Dialect\"</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        properties1</span><span class=\"pun\">.</span><span class=\"pln\">setProperty</span><span class=\"pun\">(</span><span class=\"str\">\"hibernate.show_sql\"</span><span class=\"pun\">,</span><span class=\"str\">\"false\"</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        localSessionFactoryBean</span><span class=\"pun\">.</span><span class=\"pln\">setHibernateProperties</span><span class=\"pun\">(</span><span class=\"pln\">properties1</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        localSessionFactoryBean</span><span class=\"pun\">.</span><span class=\"pln\">setPackagesToScan</span><span class=\"pun\">(</span><span class=\"str\">\"*\"</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> localSessionFactoryBean</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"com\">//txManager事务开启</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Bean</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">HibernateTransactionManager</span><span class=\"pln\"> txManager</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">HibernateTransactionManager</span><span class=\"pln\"> hibernateTransactionManager </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HibernateTransactionManager</span><span class=\"pun\">();</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">        hibernateTransactionManager</span><span class=\"pun\">.</span><span class=\"pln\">setSessionFactory</span><span class=\"pun\">(</span><span class=\"pln\">sessionFactory</span><span class=\"pun\">().</span><span class=\"pln\">getObject</span><span class=\"pun\">());</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> hibernateTransactionManager</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-4-commonaction-java-\"><a name=\"4.创建CommonAction.java(这是一个测试类)\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4.创建CommonAction.java(这是一个测试类)</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">hibernate</span><span class=\"pun\">.</span><span class=\"typ\">SQLQuery</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">hibernate</span><span class=\"pun\">.</span><span class=\"typ\">Session</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">hibernate</span><span class=\"pun\">.</span><span class=\"typ\">SessionFactory</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">transaction</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Transactional</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">.</span><span class=\"pln\">bind</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">RequestMapping</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">.</span><span class=\"pln\">bind</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">RestController</span><span class=\"pun\">;</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> javax</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Resource</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> javax</span><span class=\"pun\">.</span><span class=\"pln\">servlet</span><span class=\"pun\">.</span><span class=\"pln\">http</span><span class=\"pun\">.</span><span class=\"typ\">HttpServletResponse</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">io</span><span class=\"pun\">.</span><span class=\"typ\">IOException</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">List</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"lit\">@RestController</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"lit\">@Transactional</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">CommonAction</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-java\"></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Resource</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">SessionFactory</span><span class=\"pln\"> sessionFactory</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@RequestMapping</span><span class=\"pun\">(</span><span class=\"str\">\"test\"</span><span class=\"pun\">)</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> test</span><span class=\"pun\">(</span><span class=\"typ\">HttpServletResponse</span><span class=\"pln\"> response</span><span class=\"pun\">){</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">Session</span><span class=\"pln\"> session </span><span class=\"pun\">=</span><span class=\"pln\"> sessionFactory</span><span class=\"pun\">.</span><span class=\"pln\">getCurrentSession</span><span class=\"pun\">();</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">SQLQuery</span><span class=\"pln\"> sqlQuery </span><span class=\"pun\">=</span><span class=\"pln\"> session</span><span class=\"pun\">.</span><span class=\"pln\">createSQLQuery</span><span class=\"pun\">(</span><span class=\"str\">\"select * from user\"</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">List</span><span class=\"pln\"> list </span><span class=\"pun\">=</span><span class=\"pln\"> sqlQuery</span><span class=\"pun\">.</span><span class=\"pln\">list</span><span class=\"pun\">();</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"pln\">out</span><span class=\"pun\">.</span><span class=\"pln\">printf</span><span class=\"pun\">(</span><span class=\"pln\">list</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">()+</span><span class=\"str\">\"\"</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">try</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">            response</span><span class=\"pun\">.</span><span class=\"pln\">setContentType</span><span class=\"pun\">(</span><span class=\"str\">\"application/json\"</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">            response</span><span class=\"pun\">.</span><span class=\"pln\">setHeader</span><span class=\"pun\">(</span><span class=\"str\">\"Cache-Control\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"no-cache\"</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">            response</span><span class=\"pun\">.</span><span class=\"pln\">setCharacterEncoding</span><span class=\"pun\">(</span><span class=\"str\">\"UTF-8\"</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">            response</span><span class=\"pun\">.</span><span class=\"pln\">getWriter</span><span class=\"pun\">().</span><span class=\"pln\">write</span><span class=\"pun\">(</span><span class=\"str\">\"{\\\"msg\\\":\\\"调用成功\\\"}\"</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">catch</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">IOException</span><span class=\"pln\"> e</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            e</span><span class=\"pun\">.</span><span class=\"pln\">printStackTrace</span><span class=\"pun\">();</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-5-application-yml\"><a name=\"5.创建application.yml\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>5.创建application.yml</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-json\"><span class=\"pln\">server</span><span class=\"pun\">:</span></code></li><li class=\"L1\"><code class=\"lang-json\"><span class=\"pln\">    port</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">8080</span></code></li><li class=\"L2\"><code class=\"lang-json\"><span class=\"pln\">    address</span><span class=\"pun\">:</span><span class=\"pln\"> localhost</span></code></li><li class=\"L3\"><code class=\"lang-json\"></code></li><li class=\"L4\"><code class=\"lang-json\"><span class=\"pln\">spring</span><span class=\"pun\">:</span></code></li><li class=\"L5\"><code class=\"lang-json\"><span class=\"pln\">    datasource</span><span class=\"pun\">:</span></code></li><li class=\"L6\"><code class=\"lang-json\"><span class=\"pln\">        url</span><span class=\"pun\">:</span><span class=\"pln\"> jdbc</span><span class=\"pun\">:</span><span class=\"pln\">mysql</span><span class=\"pun\">://</span><span class=\"pln\">localhost</span><span class=\"pun\">:</span><span class=\"lit\">3306</span><span class=\"pun\">/</span><span class=\"pln\">cppba</span></code></li><li class=\"L7\"><code class=\"lang-json\"><span class=\"pln\">        username</span><span class=\"pun\">:</span><span class=\"pln\"> root</span></code></li><li class=\"L8\"><code class=\"lang-json\"><span class=\"pln\">        password</span><span class=\"pun\">:</span><span class=\"pln\"> root</span></code></li></ol></pre>\n<h2 id=\"h2-6-\"><a name=\"6.启动项目\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>6.启动项目</h2><p>我们点击启动按钮<br><img src=\"http://image.cppba.com/Image/article/60bfbf98-bc9b-4621-a5e2-41e7a6772658.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<p>控制台会打印如下内容：</p>\n<p><img src=\"http://image.cppba.com/Image/article/baa0e47e-9ff6-43ea-839f-5f59de22b6cd.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<p><img src=\"http://image.cppba.com/Image/article/734ab22a-cc2b-4a5e-acaa-e6e79792f5ca.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<p>启动成功<br>接下来我们访问<a href=\"http://127.0.0.1:8080/test\">http://127.0.0.1:8080/test</a><br>(我的CommonAction中RequestMapping(“test”),所以访问路径是test)</p>\n<p><img src=\"http://image.cppba.com/Image/article/77eb1320-647c-4086-ab00-ea68bfed7eb0.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<p>到此spring-boot配置成功！</p>\n<blockquote>\n<p>参考项目：<a href=\"https://github.com/bigbeef/cppba-spring-boot\">https://github.com/bigbeef/cppba-spring-boot</a><br>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://blog.cppba.com\">http://blog.cppba.com</a></p>\n</blockquote>\n</div>');
INSERT INTO `articles` VALUES ('2', '2016-07-14 16:58:11', '0', '1', '5', 'centos下java存储mysql中文乱码', 'centos下java存储mysql中文乱码，在windows下没问题', '## 发现问题\n运行以下sql，我们发现字符集中character_set_server编码为lantin1：\n```mysql\nmysql> show variables like \'character%\';\n+--------------------------+----------------------------+\n| Variable_name            | Value                      |\n+--------------------------+----------------------------+\n| character_set_client     | utf8                       |\n| character_set_connection | utf8                       |\n| character_set_database   | utf8                       |\n| character_set_filesystem | binary                     |\n| character_set_results    | utf8                       |\n| character_set_server     | latin1                     |\n| character_set_system     | utf8                       |\n| character_sets_dir       | /usr/share/mysql/charsets/ |\n+--------------------------+----------------------------+\n```\n## 修改配置文件\n\n在centos命令行输入：\n\n```shell\n>vim /etc/my.cnf\n```\n\n追加如下内容：\n````shell\n[client]\ndefault-character-set=utf8\n\n[mysql]\ndefault-character-set=utf8\n\n[mysqld]\ncharacter-set-server=utf8\n````\n\n然后在在mysql控制台查看：\n```mysql\nmysql> show variables like \'character%\';\n+--------------------------+----------------------------+\n| Variable_name            | Value                      |\n+--------------------------+----------------------------+\n| character_set_client     | utf8                       |\n| character_set_connection | utf8                       |\n| character_set_database   | utf8                       |\n| character_set_filesystem | binary                     |\n| character_set_results    | utf8                       |\n| character_set_server     | utf8                       |\n| character_set_system     | utf8                       |\n| character_sets_dir       | /usr/share/mysql/charsets/ |\n+--------------------------+----------------------------+\n```\n\n> github地址：https://github.com/bigbeef\n> 个人博客：http://blog.cppba.com', '<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><h2 id=\"h2-u53D1u73B0u95EEu9898\"><a name=\"发现问题\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>发现问题</h2><p>运行以下sql，我们发现字符集中character_set_server编码为lantin1：</p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-mysql\"><span class=\"pln\">mysql</span><span class=\"pun\">&gt;</span><span class=\"pln\"> show variables like </span><span class=\"str\">\'character%\'</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-mysql\"><span class=\"pun\">+--------------------------+----------------------------+</span></code></li><li class=\"L2\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> </span><span class=\"typ\">Variable_name</span><span class=\"pln\">            </span><span class=\"pun\">|</span><span class=\"pln\"> </span><span class=\"typ\">Value</span><span class=\"pln\">                      </span><span class=\"pun\">|</span></code></li><li class=\"L3\"><code class=\"lang-mysql\"><span class=\"pun\">+--------------------------+----------------------------+</span></code></li><li class=\"L4\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_client     </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L5\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_connection </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L6\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_database   </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L7\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_filesystem </span><span class=\"pun\">|</span><span class=\"pln\"> binary                     </span><span class=\"pun\">|</span></code></li><li class=\"L8\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_results    </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L9\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_server     </span><span class=\"pun\">|</span><span class=\"pln\"> latin1                     </span><span class=\"pun\">|</span></code></li><li class=\"L0\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_system     </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L1\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_sets_dir       </span><span class=\"pun\">|</span><span class=\"pln\"> </span><span class=\"str\">/usr/</span><span class=\"pln\">share</span><span class=\"pun\">/</span><span class=\"pln\">mysql</span><span class=\"pun\">/</span><span class=\"pln\">charsets</span><span class=\"pun\">/</span><span class=\"pln\"> </span><span class=\"pun\">|</span></code></li><li class=\"L2\"><code class=\"lang-mysql\"><span class=\"pun\">+--------------------------+----------------------------+</span></code></li></ol></pre>\n<h2 id=\"h2-u4FEEu6539u914Du7F6Eu6587u4EF6\"><a name=\"修改配置文件\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>修改配置文件</h2><p>在centos命令行输入：</p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-shell\"><span class=\"pun\">&gt;</span><span class=\"pln\">vim </span><span class=\"pun\">/</span><span class=\"pln\">etc</span><span class=\"pun\">/</span><span class=\"kwd\">my</span><span class=\"pun\">.</span><span class=\"pln\">cnf</span></code></li></ol></pre>\n<p>追加如下内容：</p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-shell\"><span class=\"pun\">[</span><span class=\"pln\">client</span><span class=\"pun\">]</span></code></li><li class=\"L1\"><code class=\"lang-shell\"><span class=\"kwd\">default</span><span class=\"pun\">-</span><span class=\"pln\">character</span><span class=\"pun\">-</span><span class=\"kwd\">set</span><span class=\"pun\">=</span><span class=\"pln\">utf8</span></code></li><li class=\"L2\"><code class=\"lang-shell\"></code></li><li class=\"L3\"><code class=\"lang-shell\"><span class=\"pun\">[</span><span class=\"pln\">mysql</span><span class=\"pun\">]</span></code></li><li class=\"L4\"><code class=\"lang-shell\"><span class=\"kwd\">default</span><span class=\"pun\">-</span><span class=\"pln\">character</span><span class=\"pun\">-</span><span class=\"kwd\">set</span><span class=\"pun\">=</span><span class=\"pln\">utf8</span></code></li><li class=\"L5\"><code class=\"lang-shell\"></code></li><li class=\"L6\"><code class=\"lang-shell\"><span class=\"pun\">[</span><span class=\"pln\">mysqld</span><span class=\"pun\">]</span></code></li><li class=\"L7\"><code class=\"lang-shell\"><span class=\"pln\">character</span><span class=\"pun\">-</span><span class=\"kwd\">set</span><span class=\"pun\">-</span><span class=\"pln\">server</span><span class=\"pun\">=</span><span class=\"pln\">utf8</span></code></li></ol></pre>\n<p>然后在在mysql控制台查看：</p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-mysql\"><span class=\"pln\">mysql</span><span class=\"pun\">&gt;</span><span class=\"pln\"> show variables like </span><span class=\"str\">\'character%\'</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-mysql\"><span class=\"pun\">+--------------------------+----------------------------+</span></code></li><li class=\"L2\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> </span><span class=\"typ\">Variable_name</span><span class=\"pln\">            </span><span class=\"pun\">|</span><span class=\"pln\"> </span><span class=\"typ\">Value</span><span class=\"pln\">                      </span><span class=\"pun\">|</span></code></li><li class=\"L3\"><code class=\"lang-mysql\"><span class=\"pun\">+--------------------------+----------------------------+</span></code></li><li class=\"L4\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_client     </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L5\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_connection </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L6\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_database   </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L7\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_filesystem </span><span class=\"pun\">|</span><span class=\"pln\"> binary                     </span><span class=\"pun\">|</span></code></li><li class=\"L8\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_results    </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L9\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_server     </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L0\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_set_system     </span><span class=\"pun\">|</span><span class=\"pln\"> utf8                       </span><span class=\"pun\">|</span></code></li><li class=\"L1\"><code class=\"lang-mysql\"><span class=\"pun\">|</span><span class=\"pln\"> character_sets_dir       </span><span class=\"pun\">|</span><span class=\"pln\"> </span><span class=\"str\">/usr/</span><span class=\"pln\">share</span><span class=\"pun\">/</span><span class=\"pln\">mysql</span><span class=\"pun\">/</span><span class=\"pln\">charsets</span><span class=\"pun\">/</span><span class=\"pln\"> </span><span class=\"pun\">|</span></code></li><li class=\"L2\"><code class=\"lang-mysql\"><span class=\"pun\">+--------------------------+----------------------------+</span></code></li></ol></pre>\n<blockquote>\n<p>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://blog.cppba.com\">http://blog.cppba.com</a></p>\n</blockquote>\n</div>');
INSERT INTO `articles` VALUES ('3', '2016-07-21 21:29:51', '0', '1', '5', 'centos端口开启', '我们刚开始用centos可能会有这种情况，明明服务器配置好了，为什么外网就是访问不了，这个时候你要考虑是不是你的端口没有打开centos端口开启', '```java\ncentos6：\n\n1.打开80端口：\n/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT\n2.保存设置：\n/etc/rc.d/init.d/iptables save\n3.重启防火墙：\nservice iptables restart\n4.查看防火墙状态：\n/etc/init.d/iptables status\n\ncentos7办法：\n1.// 查看 firewalld\nsystemctl status firewalld.service\n2.// 关闭 firewalld\nsystemctl stop firewalld.service\n3.// 禁止开机启动 firewalld\nsystemctl disable firewalld.service\n4.// 安装 iptables\nyum install iptables-services\n5.// 配置 iptables\nvi /etc/sysconfig/iptables\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT\n6.// 重启防火墙\nservice iptables restart\n\n```\n\n> github地址：https://github.com/bigbeef\n> 个人博客：http://blog.cppba.com', '<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">centos6</span><span class=\"pun\">：</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"lit\">1.</span><span class=\"pun\">打开</span><span class=\"lit\">80</span><span class=\"pun\">端口：</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pun\">/</span><span class=\"pln\">sbin</span><span class=\"pun\">/</span><span class=\"pln\">iptables </span><span class=\"pun\">-</span><span class=\"pln\">I INPUT </span><span class=\"pun\">-</span><span class=\"pln\">p tcp </span><span class=\"pun\">--</span><span class=\"pln\">dport </span><span class=\"lit\">80</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\">j ACCEPT</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"lit\">2.</span><span class=\"pun\">保存设置：</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pun\">/</span><span class=\"pln\">etc</span><span class=\"pun\">/</span><span class=\"pln\">rc</span><span class=\"pun\">.</span><span class=\"pln\">d</span><span class=\"pun\">/</span><span class=\"pln\">init</span><span class=\"pun\">.</span><span class=\"pln\">d</span><span class=\"pun\">/</span><span class=\"pln\">iptables save</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"lit\">3.</span><span class=\"pun\">重启防火墙：</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">service iptables restart</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"lit\">4.</span><span class=\"pun\">查看防火墙状态：</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pun\">/</span><span class=\"pln\">etc</span><span class=\"pun\">/</span><span class=\"pln\">init</span><span class=\"pun\">.</span><span class=\"pln\">d</span><span class=\"pun\">/</span><span class=\"pln\">iptables status</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">centos7</span><span class=\"pun\">办法：</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"lit\">1.</span><span class=\"com\">// 查看 firewalld</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">systemctl status firewalld</span><span class=\"pun\">.</span><span class=\"pln\">service</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"lit\">2.</span><span class=\"com\">// 关闭 firewalld</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">systemctl stop firewalld</span><span class=\"pun\">.</span><span class=\"pln\">service</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"lit\">3.</span><span class=\"com\">// 禁止开机启动 firewalld</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">systemctl disable firewalld</span><span class=\"pun\">.</span><span class=\"pln\">service</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"lit\">4.</span><span class=\"com\">// 安装 iptables</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">yum install iptables</span><span class=\"pun\">-</span><span class=\"pln\">services</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"lit\">5.</span><span class=\"com\">// 配置 iptables</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">vi </span><span class=\"pun\">/</span><span class=\"pln\">etc</span><span class=\"pun\">/</span><span class=\"pln\">sysconfig</span><span class=\"pun\">/</span><span class=\"pln\">iptables</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pun\">-</span><span class=\"pln\">A INPUT </span><span class=\"pun\">-</span><span class=\"pln\">p tcp </span><span class=\"pun\">-</span><span class=\"pln\">m state </span><span class=\"pun\">--</span><span class=\"pln\">state NEW </span><span class=\"pun\">-</span><span class=\"pln\">m tcp </span><span class=\"pun\">--</span><span class=\"pln\">dport </span><span class=\"lit\">22</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\">j ACCEPT</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"lit\">6.</span><span class=\"com\">// 重启防火墙</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">service iptables restart</span></code></li></ol></pre>\n<blockquote>\n<p>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://blog.cppba.com\">http://blog.cppba.com</a></p>\n</blockquote>\n</div>');
INSERT INTO `articles` VALUES ('4', '2016-07-21 21:39:39', '0', '1', '1', 'spring-boot使用教程(二)：增加自定义filter', '传统的javaEE增加Filter是在web.xml中配置，然而spring-boot中很明显不能这样实现，那怎么办呢？看完下面的教程，答案自然知道了。', '##前言\n传统的javaEE增加Filter是在web.xml中配置，如以下代码：\n````xml\n<filter>\n     <filter-name>TestFilter</filter-name>\n        <filter-class>com.cppba.filter.TestFilter</filter-class>\n</filter>\n<filter-mapping>\n    <filter-name>TestFilter</filter-name>\n    <url-pattern>/*</url-pattern>\n    <init-param>\n       <param-name>paramName</param-name>\n       <param-value>paramValue</param-value>\n    </init-param>\n</filter-mapping>\n````\n然而spring-boot中很明显不能这样实现，那怎么办呢？看完下面的教程，答案自然知道了。\n\n## 1.创建自定义Filter\n````java\npackage com.cppba.filter;\n\nimport javax.servlet.*;\nimport java.io.IOException;\n\npublic class TestFilter implements Filter {\n    @Override\n    public void init(FilterConfig filterConfig) throws ServletException {\n\n    }\n\n    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)\n            throws IOException, ServletException {\n        System.out.println(\"TestFilter\");\n    }\n\n    @Override\n    public void destroy() {\n\n    }\n}\n````\n\n## 2.在ApplicationConfiguration.java中增加一个@bean\n````java\n @Bean\n    public FilterRegistrationBean testFilterRegistration() {\n\n        FilterRegistrationBean registration = new FilterRegistrationBean();\n        registration.setFilter(new TestFilter());\n        registration.addUrlPatterns(\"/*\");\n        registration.addInitParameter(\"paramName\", \"paramValue\");\n        registration.setName(\"testFilter\");\n        registration.setOrder(1);\n        return registration;\n    }\n````\n## 3.启动项目\n你会看到控制台打印如下代码：\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/a0452a60-1161-4f63-8501-10fd3556fbd4.png)\n\n##4.访问项目\n最后我们访问以下http://127.0.0.1:8080/test\n如果你看到控制台打印出:TestFilter\n![https://github.com/bigbeef/cppba-spring-boot](http://image.cppba.com/Image/article/bf0a4bae-16fa-48d6-aa50-46b686cbffa2.png \"https://github.com/bigbeef/cppba-spring-boot\")\n\n恭喜你，配置成功！\n\n>参考项目：https://github.com/bigbeef/cppba-spring-boot\n> github地址：https://github.com/bigbeef\n> 个人博客：http://blog.cppba.com', '<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><h2 id=\"h2-u524Du8A00\"><a name=\"前言\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>前言</h2><p>传统的javaEE增加Filter是在web.xml中配置，如以下代码：</p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-xml\"><span class=\"tag\">&lt;filter&gt;</span></code></li><li class=\"L1\"><code class=\"lang-xml\"><span class=\"pln\">     </span><span class=\"tag\">&lt;filter-name&gt;</span><span class=\"pln\">TestFilter</span><span class=\"tag\">&lt;/filter-name&gt;</span></code></li><li class=\"L2\"><code class=\"lang-xml\"><span class=\"pln\">        </span><span class=\"tag\">&lt;filter-class&gt;</span><span class=\"pln\">com.cppba.filter.TestFilter</span><span class=\"tag\">&lt;/filter-class&gt;</span></code></li><li class=\"L3\"><code class=\"lang-xml\"><span class=\"tag\">&lt;/filter&gt;</span></code></li><li class=\"L4\"><code class=\"lang-xml\"><span class=\"tag\">&lt;filter-mapping&gt;</span></code></li><li class=\"L5\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;filter-name&gt;</span><span class=\"pln\">TestFilter</span><span class=\"tag\">&lt;/filter-name&gt;</span></code></li><li class=\"L6\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;url-pattern&gt;</span><span class=\"pln\">/*</span><span class=\"tag\">&lt;/url-pattern&gt;</span></code></li><li class=\"L7\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;init-param&gt;</span></code></li><li class=\"L8\"><code class=\"lang-xml\"><span class=\"pln\">       </span><span class=\"tag\">&lt;param-name&gt;</span><span class=\"pln\">paramName</span><span class=\"tag\">&lt;/param-name&gt;</span></code></li><li class=\"L9\"><code class=\"lang-xml\"><span class=\"pln\">       </span><span class=\"tag\">&lt;param-value&gt;</span><span class=\"pln\">paramValue</span><span class=\"tag\">&lt;/param-value&gt;</span></code></li><li class=\"L0\"><code class=\"lang-xml\"><span class=\"pln\">    </span><span class=\"tag\">&lt;/init-param&gt;</span></code></li><li class=\"L1\"><code class=\"lang-xml\"><span class=\"tag\">&lt;/filter-mapping&gt;</span></code></li></ol></pre>\n<p>然而spring-boot中很明显不能这样实现，那怎么办呢？看完下面的教程，答案自然知道了。</p>\n<h2 id=\"h2-1-filter\"><a name=\"1.创建自定义Filter\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.创建自定义Filter</h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">filter</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> javax</span><span class=\"pun\">.</span><span class=\"pln\">servlet</span><span class=\"pun\">.*;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">io</span><span class=\"pun\">.</span><span class=\"typ\">IOException</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">TestFilter</span><span class=\"pln\"> </span><span class=\"kwd\">implements</span><span class=\"pln\"> </span><span class=\"typ\">Filter</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> init</span><span class=\"pun\">(</span><span class=\"typ\">FilterConfig</span><span class=\"pln\"> filterConfig</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">ServletException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code class=\"lang-java\"></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> doFilter</span><span class=\"pun\">(</span><span class=\"typ\">ServletRequest</span><span class=\"pln\"> servletRequest</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">ServletResponse</span><span class=\"pln\"> servletResponse</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">FilterChain</span><span class=\"pln\"> filterChain</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">            </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">IOException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">ServletException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"pln\">out</span><span class=\"pun\">.</span><span class=\"pln\">println</span><span class=\"pun\">(</span><span class=\"str\">\"TestFilter\"</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-java\"></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> destroy</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-java\"></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-2-applicationconfiguration-java-bean\"><a name=\"2.在ApplicationConfiguration.java中增加一个@bean\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.在ApplicationConfiguration.java中增加一个<a href=\"https://github.com/bean\" title=\"@bean\" class=\"at-link\">@bean</a></h2><pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\"> </span><span class=\"lit\">@Bean</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">FilterRegistrationBean</span><span class=\"pln\"> testFilterRegistration</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">FilterRegistrationBean</span><span class=\"pln\"> registration </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">FilterRegistrationBean</span><span class=\"pun\">();</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        registration</span><span class=\"pun\">.</span><span class=\"pln\">setFilter</span><span class=\"pun\">(</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">TestFilter</span><span class=\"pun\">());</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">        registration</span><span class=\"pun\">.</span><span class=\"pln\">addUrlPatterns</span><span class=\"pun\">(</span><span class=\"str\">\"/*\"</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pln\">        registration</span><span class=\"pun\">.</span><span class=\"pln\">addInitParameter</span><span class=\"pun\">(</span><span class=\"str\">\"paramName\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"paramValue\"</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"pln\">        registration</span><span class=\"pun\">.</span><span class=\"pln\">setName</span><span class=\"pun\">(</span><span class=\"str\">\"testFilter\"</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-java\"><span class=\"pln\">        registration</span><span class=\"pun\">.</span><span class=\"pln\">setOrder</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> registration</span><span class=\"pun\">;</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li></ol></pre>\n<h2 id=\"h2-3-\"><a name=\"3.启动项目\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3.启动项目</h2><p>你会看到控制台打印如下代码：<br><img src=\"http://image.cppba.com/Image/article/a0452a60-1161-4f63-8501-10fd3556fbd4.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<h2 id=\"h2-4-\"><a name=\"4.访问项目\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4.访问项目</h2><p>最后我们访问以下<a href=\"http://127.0.0.1:8080/test\">http://127.0.0.1:8080/test</a><br>如果你看到控制台打印出:TestFilter<br><img src=\"http://image.cppba.com/Image/article/bf0a4bae-16fa-48d6-aa50-46b686cbffa2.png\" alt=\"https://github.com/bigbeef/cppba-spring-boot\" title=\"https://github.com/bigbeef/cppba-spring-boot\"></p>\n<p>恭喜你，配置成功！</p>\n<blockquote>\n<p>参考项目：<a href=\"https://github.com/bigbeef/cppba-spring-boot\">https://github.com/bigbeef/cppba-spring-boot</a><br>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://blog.cppba.com\">http://blog.cppba.com</a></p>\n</blockquote>\n</div>');
INSERT INTO `articles` VALUES ('5', '2016-07-21 21:45:28', '0', '1', '1', 'spring-session使用教程(一)：redis共享session', '说白了就是解决session共享问题，spring-session将web的session存到一个指定的位置，集群的所有web服务器在操作session的时候就去这个位置找', '**1.Spring session简介：**\n说白了就是解决session共享问题，spring-session将web的session存到一个指定的位置，集群的所有web服务器在操作session的时候就去这个位置找。（我比较喜欢用最土的语言解释，不官方但是容易理解）\n\n注意：本文只教你怎么使用spring-session-redis，不会深入探讨为什么这么实现，因为暂时我也没弄清他的源源码，但是照下面的做法你一定能跑起来。\n\n**2.maven在pom.xml中配置**\n````java\n<!--spring-session-->\n<dependency>\n    <groupId>org.springframework.session</groupId>\n    <artifactId>spring-session-data-redis</artifactId>\n    <version>1.2.1.RELEASE</version>\n</dependency>\n````\n\n**3.创建RedisHttpSessionConfig**\n````java\npackage com.cppba.config;\nimport org.springframework.context.annotation.Bean;\n\nimport org.springframework.data.redis.connection.jedis.JedisConnectionFactory;\nimport org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;\n\n@EnableRedisHttpSession\npublic class RedisHttpSessionConfig {\n\n    @Bean\n    public JedisConnectionFactory connectionFactory() {\n        JedisConnectionFactory connection = new JedisConnectionFactory();\n        connection.setHostName(\"127.0.0.1\");\n        connection.setPort(6379);\n        return connection;\n    }\n}\n````\n****\n**4.创建SpringSessionInitializer**\n````java\npackage com.cppba.config;\n\nimport org.springframework.session.web.context.AbstractHttpSessionApplicationInitializer;\n\npublic class SpringSessionInitializer extends AbstractHttpSessionApplicationInitializer {\n}\n````\n\n接下来，把项目跑起来，在浏览器上访问一下，我们再在redis的控制台输入keys *，如果你能看到像下图的结果，恭喜你，配置成功！\n\n![https://github.com/bigbeef](http://image.cppba.com/Image/article/cc986884-2e9f-40a0-9567-599e224230aa.png)\n\n> github地址：https://github.com/bigbeef\n> 个人博客：http://blog.cppba.com', '<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><p><strong>1.Spring session简介：</strong><br>说白了就是解决session共享问题，spring-session将web的session存到一个指定的位置，集群的所有web服务器在操作session的时候就去这个位置找。（我比较喜欢用最土的语言解释，不官方但是容易理解）</p>\n<p>注意：本文只教你怎么使用spring-session-redis，不会深入探讨为什么这么实现，因为暂时我也没弄清他的源源码，但是照下面的做法你一定能跑起来。</p>\n<p><strong>2.maven在pom.xml中配置</strong></p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"pun\">&lt;!--</span><span class=\"pln\">spring</span><span class=\"pun\">-</span><span class=\"pln\">session</span><span class=\"pun\">--&gt;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pun\">&lt;</span><span class=\"pln\">dependency</span><span class=\"pun\">&gt;</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">&lt;</span><span class=\"pln\">groupId</span><span class=\"pun\">&gt;</span><span class=\"pln\">org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">session</span><span class=\"pun\">&lt;/</span><span class=\"pln\">groupId</span><span class=\"pun\">&gt;</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">&lt;</span><span class=\"pln\">artifactId</span><span class=\"pun\">&gt;</span><span class=\"pln\">spring</span><span class=\"pun\">-</span><span class=\"pln\">session</span><span class=\"pun\">-</span><span class=\"pln\">data</span><span class=\"pun\">-</span><span class=\"pln\">redis</span><span class=\"pun\">&lt;/</span><span class=\"pln\">artifactId</span><span class=\"pun\">&gt;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">&lt;</span><span class=\"pln\">version</span><span class=\"pun\">&gt;</span><span class=\"lit\">1.2</span><span class=\"pun\">.</span><span class=\"lit\">1.RELEASE</span><span class=\"pun\">&lt;/</span><span class=\"pln\">version</span><span class=\"pun\">&gt;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pun\">&lt;/</span><span class=\"pln\">dependency</span><span class=\"pun\">&gt;</span></code></li></ol></pre>\n<p><strong>3.创建RedisHttpSessionConfig</strong></p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">config</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Bean</span><span class=\"pun\">;</span></code></li><li class=\"L2\"><code class=\"lang-java\"></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">redis</span><span class=\"pun\">.</span><span class=\"pln\">connection</span><span class=\"pun\">.</span><span class=\"pln\">jedis</span><span class=\"pun\">.</span><span class=\"typ\">JedisConnectionFactory</span><span class=\"pun\">;</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">session</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">redis</span><span class=\"pun\">.</span><span class=\"pln\">config</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">.</span><span class=\"pln\">http</span><span class=\"pun\">.</span><span class=\"typ\">EnableRedisHttpSession</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"lit\">@EnableRedisHttpSession</span></code></li><li class=\"L7\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">RedisHttpSessionConfig</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-java\"></code></li><li class=\"L9\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"lit\">@Bean</span></code></li><li class=\"L0\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">JedisConnectionFactory</span><span class=\"pln\"> connectionFactory</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"typ\">JedisConnectionFactory</span><span class=\"pln\"> connection </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">JedisConnectionFactory</span><span class=\"pun\">();</span></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"pln\">        connection</span><span class=\"pun\">.</span><span class=\"pln\">setHostName</span><span class=\"pun\">(</span><span class=\"str\">\"127.0.0.1\"</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-java\"><span class=\"pln\">        connection</span><span class=\"pun\">.</span><span class=\"pln\">setPort</span><span class=\"pun\">(</span><span class=\"lit\">6379</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> connection</span><span class=\"pun\">;</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<hr>\n<p><strong>4.创建SpringSessionInitializer</strong></p>\n<pre style=\"\" class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-java\"><span class=\"kwd\">package</span><span class=\"pln\"> com</span><span class=\"pun\">.</span><span class=\"pln\">cppba</span><span class=\"pun\">.</span><span class=\"pln\">config</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-java\"></code></li><li class=\"L2\"><code class=\"lang-java\"><span class=\"kwd\">import</span><span class=\"pln\"> org</span><span class=\"pun\">.</span><span class=\"pln\">springframework</span><span class=\"pun\">.</span><span class=\"pln\">session</span><span class=\"pun\">.</span><span class=\"pln\">web</span><span class=\"pun\">.</span><span class=\"pln\">context</span><span class=\"pun\">.</span><span class=\"typ\">AbstractHttpSessionApplicationInitializer</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-java\"></code></li><li class=\"L4\"><code class=\"lang-java\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">SpringSessionInitializer</span><span class=\"pln\"> </span><span class=\"kwd\">extends</span><span class=\"pln\"> </span><span class=\"typ\">AbstractHttpSessionApplicationInitializer</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-java\"><span class=\"pun\">}</span></code></li></ol></pre>\n<p>接下来，把项目跑起来，在浏览器上访问一下，我们再在redis的控制台输入keys *，如果你能看到像下图的结果，恭喜你，配置成功！</p>\n<p><img src=\"http://image.cppba.com/Image/article/cc986884-2e9f-40a0-9567-599e224230aa.png\" alt=\"https://github.com/bigbeef\"></p>\n<blockquote>\n<p>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://blog.cppba.com\">http://blog.cppba.com</a></p>\n</blockquote>\n</div>');
INSERT INTO `articles` VALUES ('6', '2016-07-28 16:59:24', '0', '1', '8', 'redis for windows 安装教程', 'redis for windows 安装教程', '##1.下载redis for windows\n下载地址：http://pan.baidu.com/s/1hrYynq8\n##2.解压redis\n下载后解压，你会看到如下目录，下面是我的目录，记住你的绝对目录地址\n（我的是：C:\\Users\\Administrator\\Desktop\\redis64-3.0.501）\n\n![](http://image.cppba.com/Image/article/942a8101-6153-4bc4-8d95-8abc17104f1e.png)\n\n##3.运行redis\n按键win+R，打卡cmd\n依次输入：cd C:\\Users\\Administrator\\Desktop\\redis64-3.0.501\nredis-server.exe redis.windows.conf\n\n![](http://image.cppba.com/Image/article/f0e667f2-65eb-4435-9d5b-518f5f9e7213.png)\n\n安装成功（这个界面千万不到关闭，否则redis也会关闭）\n\n##4.测试\n我们测试一下：\n同样打开cmd  输入telnet 127.0.0.1 6379，此时会打卡redis命令控制界面\n我们依次输入：set test 123456\n    get test\n\n![](http://image.cppba.com/Image/article/5a56fe11-37f3-48a8-9c9f-6108aba9f75a.png)\n\n如果你能弹出结果，恭喜你安装成功\n\n> github地址：https://github.com/bigbeef\n> 个人博客：http://blog.cppba.com', '<div style=\"padding: 20px;\" previewcontainer=\"true\" class=\"markdown-body editormd-preview-container\"><h2 id=\"h2-1-redis-for-windows\"><a name=\"1.下载redis for windows\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.下载redis for windows</h2><p>下载地址：<a href=\"http://pan.baidu.com/s/1hrYynq8\">http://pan.baidu.com/s/1hrYynq8</a></p>\n<h2 id=\"h2-2-redis\"><a name=\"2.解压redis\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.解压redis</h2><p>下载后解压，你会看到如下目录，下面是我的目录，记住你的绝对目录地址<br>（我的是：C:\\Users\\Administrator\\Desktop\\redis64-3.0.501）</p>\n<p><img src=\"http://image.cppba.com/Image/article/942a8101-6153-4bc4-8d95-8abc17104f1e.png\" alt=\"\"></p>\n<h2 id=\"h2-3-redis\"><a name=\"3.运行redis\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3.运行redis</h2><p>按键win+R，打卡cmd<br>依次输入：cd C:\\Users\\Administrator\\Desktop\\redis64-3.0.501<br>redis-server.exe redis.windows.conf</p>\n<p><img src=\"http://image.cppba.com/Image/article/f0e667f2-65eb-4435-9d5b-518f5f9e7213.png\" alt=\"\"></p>\n<p>安装成功（这个界面千万不到关闭，否则redis也会关闭）</p>\n<h2 id=\"h2-4-\"><a name=\"4.测试\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4.测试</h2><p>我们测试一下：<br>同样打开cmd  输入telnet 127.0.0.1 6379，此时会打卡redis命令控制界面<br>我们依次输入：set test 123456<br>    get test</p>\n<p><img src=\"http://image.cppba.com/Image/article/5a56fe11-37f3-48a8-9c9f-6108aba9f75a.png\" alt=\"\"></p>\n<p>如果你能弹出结果，恭喜你安装成功</p>\n<blockquote>\n<p>github地址：<a href=\"https://github.com/bigbeef\">https://github.com/bigbeef</a><br>个人博客：<a href=\"http://blog.cppba.com\">http://blog.cppba.com</a></p>\n</blockquote>\n</div>');

-- ----------------------------
-- Table structure for permission
-- ----------------------------
DROP TABLE IF EXISTS `permission`;
CREATE TABLE `permission` (
  `permission_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `add_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `delete_status` int(11) DEFAULT '0',
  `role_id` bigint(20) DEFAULT NULL,
  `token` varchar(32) DEFAULT NULL,
  `url` varchar(64) DEFAULT NULL COMMENT '资源名',
  `description` varchar(32) DEFAULT NULL COMMENT '权限说明',
  PRIMARY KEY (`permission_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of permission
-- ----------------------------
INSERT INTO `permission` VALUES ('1', '2016-07-15 09:55:37', '0', '1', null, 'blogger:create', null);

-- ----------------------------
-- Table structure for role
-- ----------------------------
DROP TABLE IF EXISTS `role`;
CREATE TABLE `role` (
  `role_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `add_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `delete_status` int(11) DEFAULT '0',
  `name` varchar(16) DEFAULT NULL COMMENT '角色名称',
  `description` varchar(16) DEFAULT NULL COMMENT '角色说明',
  PRIMARY KEY (`role_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of role
-- ----------------------------
INSERT INTO `role` VALUES ('1', '2016-07-15 13:55:27', '0', 'blogger', '博主');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `user_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `add_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `delete_status` int(11) DEFAULT '0',
  `user_name` varchar(16) DEFAULT NULL COMMENT '账号',
  `password` varchar(32) DEFAULT NULL COMMENT '密码',
  `nick_name` varchar(16) DEFAULT NULL COMMENT '昵称',
  `remark` text COMMENT '个人简介',
  `title` varchar(64) DEFAULT NULL COMMENT '页面标题',
  `keyword` varchar(128) DEFAULT NULL COMMENT '关键字',
  `description` varchar(128) DEFAULT NULL COMMENT '描述',
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('1', '2016-07-18 22:36:46', '0', 'admin', '21232f297a57a5a743894a0e4a801fc3', '大黄蜂', '大黄蜂', '大黄蜂的独立博客', '大黄蜂,大黄蜂coder,博客,java博客,大黄蜂的博客', '大黄蜂,大黄蜂coder,博客,java博客,大黄蜂的博客');
INSERT INTO `user` VALUES ('2', '2016-07-18 22:37:09', '0', 'test', '098f6bcd4621d373cade4e832627b4f6', 'test', 'test', null, null, null);

-- ----------------------------
-- Table structure for user_role
-- ----------------------------
DROP TABLE IF EXISTS `user_role`;
CREATE TABLE `user_role` (
  `user_role_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `add_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `delete_status` int(11) DEFAULT '0',
  `user_id` bigint(20) DEFAULT NULL,
  `role_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`user_role_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user_role
-- ----------------------------
INSERT INTO `user_role` VALUES ('1', '2016-07-15 09:55:21', '0', '1', '1');
